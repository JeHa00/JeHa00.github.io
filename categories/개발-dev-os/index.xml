<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>개발-dev OS on Jeha00 DevLog</title>
    <link>http://jeha00.github.io/categories/%EA%B0%9C%EB%B0%9C-dev-os/</link>
    <description>Recent content in 개발-dev OS on Jeha00 DevLog</description>
    <image>
      <url>http://jeha00.github.io/47</url>
      <link>http://jeha00.github.io/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 22 Apr 2022 18:50:51 +0900</lastBuildDate><atom:link href="http://jeha00.github.io/categories/%EA%B0%9C%EB%B0%9C-dev-os/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[TIL] OS Chapter 06: CPU scheduling</title>
      <link>http://jeha00.github.io/post/os/os_chapter_06_cpu_scheduling/</link>
      <pubDate>Fri, 22 Apr 2022 18:50:51 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_06_cpu_scheduling/</guid>
      <description>Bound process를 중심으로 CPU 스케쥴러가 왜 필요한지, 스케쥴링의 성능 척도는 무엇인지, CPU sheduling 알고리즘의 종류에는 무엇이 있고, 이 알고리즘 평가는 어떻게 이뤄지는지 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 05: 프로세스 관리</title>
      <link>http://jeha00.github.io/post/os/os_chapter_05_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Mon, 18 Apr 2022 23:25:25 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_05_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EA%B4%80%EB%A6%AC/</guid>
      <description>프로세스란 무엇인지, 프로세스의 상태는 어떻게 흘러가는지, 문맥 교환이란 무엇인지, 프로세스가 어떻게 생성되고 종료되는지, 프로세스끼리 협력은 어떻게 하는지, thread는 무엇인지 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 04: 프로그램의 구조와 실행</title>
      <link>http://jeha00.github.io/post/os/os_chapter_04_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98%EA%B5%AC%EC%A1%B0%EC%99%80%EC%8B%A4%ED%96%89/</link>
      <pubDate>Fri, 15 Apr 2022 00:27:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_04_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98%EA%B5%AC%EC%A1%B0%EC%99%80%EC%8B%A4%ED%96%89/</guid>
      <description>프로그램의 구조와 실행에 대해 설명한다. 예를 들어 프로그램의 주소영역, PCB, Program counter, 일반 명령과 특권 명령, Virtual memory, kernel mode와 user mode 등등을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 03: 컴퓨터 시스템의 동작원리 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_2/</link>
      <pubDate>Thu, 14 Apr 2022 14:54:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_2/</guid>
      <description>입출력 구조, DMA, 저장장치의 구조 그리고 계층구조에 대해 알아본다. 또한, 하드웨어, 메모리, CPU의 각 보안 방법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 03: 컴퓨터 시스템의 동작원리 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_1/</link>
      <pubDate>Wed, 13 Apr 2022 13:55:26 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_1/</guid>
      <description>I/O 연산이 무엇이고, controller와 local buffer가 무엇이고, 입출력 연산이 Interrupt를 중심으로 어떻게 진행되는지를 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 02: Introduction to Operating System</title>
      <link>http://jeha00.github.io/post/os/os_chapter_02_%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C_%EA%B0%9C%EC%9A%94/</link>
      <pubDate>Tue, 05 Apr 2022 17:43:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_02_%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C_%EA%B0%9C%EC%9A%94/</guid>
      <description>운영체제란 무엇이고, 무슨 역할을 하는지, 어떻게 분류되는지, 그리고 CPU, 메모리, 입출력 장치의 대략적인 관리 mechanism에 대해 알아본다.</description>
    </item>
    
  </channel>
</rss>
