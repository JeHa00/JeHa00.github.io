<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>java on Jeha DevLog</title>
    <link>http://jeha00.github.io/categories/java/</link>
    <description>Recent content in java on Jeha DevLog</description>
    <image>
      <url>http://jeha00.github.io/47</url>
      <link>http://jeha00.github.io/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 15 Mar 2024 00:34:19 +0900</lastBuildDate><atom:link href="http://jeha00.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>자바의 다형적 참조, 추상 클래스 그리고 인터페이스</title>
      <link>http://jeha00.github.io/post/java/5_polymorphism/</link>
      <pubDate>Fri, 15 Mar 2024 00:34:19 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/java/5_polymorphism/</guid>
      <description>자바의 메모리 영역과 상속을 토대로 어떻게 다형성이 구현되는지, 다형성을 구현하는 방법 중 하나인 캐스팅, 그리고 효과적으로 다형성을 구현하기 위한 추상 클래스와 인터페이스에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>객체 지향 5원칙 중 단일 책임 원칙(SRP)을 예제 코드에 적용해보자</title>
      <link>http://jeha00.github.io/post/java/7_srp/</link>
      <pubDate>Thu, 08 Feb 2024 01:28:04 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/java/7_srp/</guid>
      <description>객체 지향 5원칙인 SOLID 중 단일 책임 원칙인 Single Responsibility principle을 자바 코드에 적용해보자.</description>
    </item>
    
    <item>
      <title>자바의 클래스는 메모리 영역에서는 어떻게 생성될까?</title>
      <link>http://jeha00.github.io/post/java/3_memory/</link>
      <pubDate>Thu, 01 Feb 2024 00:32:17 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/java/3_memory/</guid>
      <description>메모리의 각 메서드 영역, 스택 영역, 힙 영역에 무엇이 생성되는지 알아보고,  NullPointerException이 왜 발생하는지 알아본다.</description>
    </item>
    
    <item>
      <title>자바의 클래스에 대해 알아보자 - 2</title>
      <link>http://jeha00.github.io/post/java/2_2_class/</link>
      <pubDate>Tue, 23 Jan 2024 00:33:07 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/java/2_2_class/</guid>
      <description>생성자, 접근 제어자, 상수 변환 예약어에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>자바의 클래스에 대해 알아보자 - 1</title>
      <link>http://jeha00.github.io/post/java/2_1_class/</link>
      <pubDate>Tue, 23 Jan 2024 00:32:07 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/java/2_1_class/</guid>
      <description>클래스가 필요한 이유, 클래스 멤버 변수 그리고 메서드, 절차 지향과 객체 지향의 차이점에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>자바에서의 변수는 어떨까?</title>
      <link>http://jeha00.github.io/post/java/1_variable/</link>
      <pubDate>Sat, 20 Jan 2024 17:06:13 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/java/1_variable/</guid>
      <description>자바에서의 변수는 파이썬과 어떻게 다른지 알아보자.</description>
    </item>
    
    <item>
      <title>상속과 오버라이딩이 메모리 영역에서 어떻게 이뤄지지?</title>
      <link>http://jeha00.github.io/post/java/4_inheritance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://jeha00.github.io/post/java/4_inheritance/</guid>
      <description>자바에서는 상속과 오버라이딩을 어떻게 만드는 지와 메모리 영역에서 어떻게 작동되는지 알아본다.</description>
    </item>
    
  </channel>
</rss>
