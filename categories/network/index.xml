<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Network on Jeha00 DevLog</title>
    <link>http://jeha00.github.io/categories/network/</link>
    <description>Recent content in Network on Jeha00 DevLog</description>
    <image>
      <url>http://jeha00.github.io/47</url>
      <link>http://jeha00.github.io/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 31 Aug 2022 14:23:03 +0900</lastBuildDate><atom:link href="http://jeha00.github.io/categories/network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[TIL]Web Application Basic study: 4, 5, 6, 7 계층</title>
      <link>http://jeha00.github.io/post/network/webapplicationbasic03/</link>
      <pubDate>Wed, 31 Aug 2022 14:23:03 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/webapplicationbasic03/</guid>
      <description>이번에는 4계층부터 7계층까지 각각 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL]Web Application Basic study: OSI 7 layer outline</title>
      <link>http://jeha00.github.io/post/network/osi_7_layer/0_outline/</link>
      <pubDate>Tue, 30 Aug 2022 18:50:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/osi_7_layer/0_outline/</guid>
      <description>OSI 7 layer는 전체적으로 무슨 층으로, 무슨 프로토콜로, 각 계층의 데이터 타입은 무엇이고, 각 주요 기기들은 무엇인지 통합적으로 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL]Web Application Basic study: client와 server / web server structure</title>
      <link>http://jeha00.github.io/post/network/webapplicationbasic01/</link>
      <pubDate>Mon, 29 Aug 2022 17:14:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/webapplicationbasic01/</guid>
      <description>클라이언트와 서버란 무엇인지, 서버의 종류에는 무엇이 있고, 웹서버 - WSGI - 웹 애플리케이션 - DB라는 서버 구조에서 각각에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP Header 2</title>
      <link>http://jeha00.github.io/post/network/http_8/</link>
      <pubDate>Fri, 18 Mar 2022 21:51:01 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/http_8/</guid>
      <description>검증 헤더와 조건부 요청 헤더의 종류, 그중 캐시 관련 헤더에 대해서 알아본다. 그리고, 프록시 서버와 원(Origin) 서버의 차이와 캐시를 어떻게 무효화하는지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP Header 1</title>
      <link>http://jeha00.github.io/post/network/http_7/</link>
      <pubDate>Thu, 17 Mar 2022 20:17:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/http_7/</guid>
      <description>representation, 콘텐츠 협상, 전송 방식, 일반 정보, 특별 정보, 인증 그리고 쿠키에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP status</title>
      <link>http://jeha00.github.io/post/network/http_6/</link>
      <pubDate>Tue, 15 Mar 2022 10:14:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/http_6/</guid>
      <description>HTTP status 2xx, 3xx, 4xx, 5xx에 대해 각각 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP method use</title>
      <link>http://jeha00.github.io/post/network/http_5/</link>
      <pubDate>Mon, 14 Mar 2022 21:41:29 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/http_5/</guid>
      <description>HTTP method를 가지고 클라이언트가 서버에 어떻게 데이터를 전송하는지, 그리고 API 설계에는 무슨 종류가 있는지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP method</title>
      <link>http://jeha00.github.io/post/network/http_4/</link>
      <pubDate>Thu, 10 Mar 2022 20:32:24 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/http_4/</guid>
      <description>HTTP method인 GET, POST, PUT, PATCH, DELETE 그리고 속성에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP basic</title>
      <link>http://jeha00.github.io/post/network/http_3/</link>
      <pubDate>Wed, 09 Mar 2022 17:56:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/http_3/</guid>
      <description>HTTP란 무엇이고, HTTP의 특징인 클라이언트 서버 구조, stateless, connectionless, HTTP mesage에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP intro. 2: URI 와 웹 브라우저 요청 흐름</title>
      <link>http://jeha00.github.io/post/network/http_2/</link>
      <pubDate>Tue, 08 Mar 2022 11:50:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/http_2/</guid>
      <description>URI, URL, URN 에 대해 알아보고, 웹 브라우저의 요청 흐름에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP intro. 1: Internet network</title>
      <link>http://jeha00.github.io/post/network/http_1/</link>
      <pubDate>Mon, 07 Mar 2022 21:16:44 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/http_1/</guid>
      <description>HTTP를 학습하기 위해 사전지식으로 IP,TCP/UDP, PORT, DNS를 알아본다.</description>
    </item>
    
  </channel>
</rss>
