<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>개발-dev on Jeha00 DevLog</title>
    <link>http://jeha00.github.io/categories/%EA%B0%9C%EB%B0%9C-dev/</link>
    <description>Recent content in 개발-dev on Jeha00 DevLog</description>
    <image>
      <url>http://jeha00.github.io/47</url>
      <link>http://jeha00.github.io/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 17 May 2022 17:53:25 +0900</lastBuildDate><atom:link href="http://jeha00.github.io/categories/%EA%B0%9C%EB%B0%9C-dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[TIL] Python basic 46: Metaclass</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_46_metaclass/</link>
      <pubDate>Tue, 17 May 2022 17:53:25 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_46_metaclass/</guid>
      <description>첫 번째,Type fuction을 통해서 Metaclass가 무엇인지, 그리고 class를 동적으로 만들어본다. 두 번째, Metaclass의 장점은 무엇이고, metaclass를 통해서 custom metaclass를 만들어본다.</description>
    </item>
    
    <item>
      <title>Dev-Contents</title>
      <link>http://jeha00.github.io/post/dev-contents/</link>
      <pubDate>Thu, 31 Mar 2022 22:09:06 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/dev-contents/</guid>
      <description>Updated on March 31   /  개발 관련 좋은 컨텐츠를 보관하고 섭취하기</description>
    </item>
    
    <item>
      <title>Window에서 Hugo로 Github page 만들고 배포하기</title>
      <link>http://jeha00.github.io/post/hugo%EB%A1%9C-github-page-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 17 Feb 2022 21:49:13 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/hugo%EB%A1%9C-github-page-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/</guid>
      <description>SSG의 한 종류 &amp;lsquo;Hugo&amp;rsquo;와 &amp;lsquo;git remote, git submodule&amp;rsquo;로 Github page를 만든다. 그 후, 컨텐츠 생성과 업로드를 한다. 마지막으로 utterances로 댓글 기능 추가, deploy.sh를 사용하여 업로드하는 방법을 다룬다.</description>
    </item>
    
  </channel>
</rss>
