<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Django on Jeha00 DevLog</title>
    <link>http://jeha00.github.io/tags/django/</link>
    <description>Recent content in Django on Jeha00 DevLog</description>
    <image>
      <url>http://jeha00.github.io/47</url>
      <link>http://jeha00.github.io/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 09 Nov 2022 04:31:43 +0900</lastBuildDate><atom:link href="http://jeha00.github.io/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django study: DRF의 Policy - Throttle_scope, pagination, authentication &amp; permission</title>
      <link>http://jeha00.github.io/post/django/drf_study03/</link>
      <pubDate>Wed, 09 Nov 2022 04:31:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/drf_study03/</guid>
      <description>DRF에는 많은 기능들이 존재한다. 그 중에서 자주 사용하는 throttle_scope, pagination, auththentication &amp;amp; permission에 대해 학습했다.</description>
    </item>
    
    <item>
      <title>Django study: DRF의 API url 만드는 방법 3가지 - APIView, @api_view([]), ModelViewSet</title>
      <link>http://jeha00.github.io/post/django/drf_study02/</link>
      <pubDate>Sat, 05 Nov 2022 13:36:56 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/drf_study02/</guid>
      <description>API url을 만드는 방법으로 APIView, @api_view() 그리고 ModelViewSet을 사용한다. 이 방법들 중에서 자주 사용하는 방식은 APIView다. ModelViewSet은 중복을 방지하여 여러 url들을 만들어주지만, 최적화가 어렵기 때문이다.</description>
    </item>
    
    <item>
      <title>Django study: DRF의 직렬화(serialization)와 역직렬화(deserialization)</title>
      <link>http://jeha00.github.io/post/django/drf_study01/</link>
      <pubDate>Fri, 28 Oct 2022 13:29:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/drf_study01/</guid>
      <description>Django의 library인 Django-RestFramework의 직렬화, 역직렬화 개념과 이를 사용하기 위한 Serializer를 작성해본다.</description>
    </item>
    
    <item>
      <title>Django study: nginx와 uwsgi를 사용한 django application deployment 04 - DB 나누기</title>
      <link>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_4/</link>
      <pubDate>Thu, 20 Oct 2022 18:45:16 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_4/</guid>
      <description>uwsgi, nginx 를 연결한 후, R3에 연결하여 static file을 적용했다. 그 다음으로 DB를 develop 단계와 product 단계로 나눠서 적용하기 위해 DB를 나누는 작업을 해본다.</description>
    </item>
    
    <item>
      <title>Django study: nginx와 uwsgi를 사용한 django application deployment 03 - static file 적용하기</title>
      <link>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_3/</link>
      <pubDate>Wed, 19 Oct 2022 03:31:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_3/</guid>
      <description>uwsgi, nginx 를 연결했으니, R3에 연결하여 static file을 적용해본다.</description>
    </item>
    
    <item>
      <title>Django study: nginx와 uwsgi를 사용한 django application deployment 02 - 502 Bad Gateway Error</title>
      <link>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_2/</link>
      <pubDate>Sat, 15 Oct 2022 03:28:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_2/</guid>
      <description>nginx와 uwsgi를 사용한 배포과정에서 발생한 502 Bad Gateway Error에 대한 해결과정과 해결책을 정리해본다.</description>
    </item>
    
    <item>
      <title>Django study: nginx와 uwsgi를 사용한 django application deployment 01 - nginx와 uwsgi 연결하기</title>
      <link>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_1/</link>
      <pubDate>Fri, 14 Oct 2022 03:16:12 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_1/</guid>
      <description>django appliation을 nginx와 uwsgi를 사용하여 배포하는 과정을 학습한다.</description>
    </item>
    
    <item>
      <title>Django study: 가상환경 자동 활성화를 위한 directory 구조 및 설치 경로</title>
      <link>http://jeha00.github.io/post/django/virtualenv_path/</link>
      <pubDate>Wed, 07 Sep 2022 14:37:03 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/virtualenv_path/</guid>
      <description>경로에 들어오면 자동적으로 가상환경이 활성화되는 directory 구조에 대해 이전 방식과 비교하여 정리해놓는다.</description>
    </item>
    
    <item>
      <title>Django study: Document tutorial Part 4 따라하기</title>
      <link>http://jeha00.github.io/post/django/doc_tutorial_04/</link>
      <pubDate>Fri, 08 Jul 2022 23:46:04 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/doc_tutorial_04/</guid>
      <description>0. Introduction Write a minimal form use generic views: Less code is better django 공식 문서를 번역하는 작업을 통해 튜토리얼을 진행하여 이해해본다.
이번 tutorial을 통해서 기본적인 설문조사 애플리케이션을 만들 수 있다.
이 애플리케이션은 다음 2가지로 구성된다. 사람들이 설문조사를 보고 투표할 수 있는 &amp;lsquo;public site&amp;rsquo; 설문조사를 더하고, 수정하고, 삭제하는 &amp;lsquo;admin site&amp;rsquo; 1. Write a minimal form Par03에서 만들었던 detail template을 업데이트해보자. 업데이트할 detail template에는 HTML form 요소가 포함된다. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 &amp;gt; &amp;lt;form action=&amp;#34;{% url &amp;#39;polls:vote&amp;#39; question.</description>
    </item>
    
    <item>
      <title>Django study: Document tutorial Part 2 따라하기</title>
      <link>http://jeha00.github.io/post/django/doc_tutorial_02/</link>
      <pubDate>Tue, 05 Jul 2022 23:45:49 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/doc_tutorial_02/</guid>
      <description>class를 사용하여 model을 만들면서 Field를 적용해본다. application을 활성화하기 위해 settings.py에 INSTALLED_APPS 에 등록한다. 그리고, migration file을 만든 후, DB에 적용해본다.</description>
    </item>
    
    <item>
      <title>Django study: Document tutorial Part 1 따라하기</title>
      <link>http://jeha00.github.io/post/django/doc_tutorial_01/</link>
      <pubDate>Sun, 03 Jul 2022 23:45:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/doc_tutorial_01/</guid>
      <description>django를 설치한 후, project와 application을 명령어를 통해 만들어보고, view와 URLconf에 대해 학습해본다.</description>
    </item>
    
  </channel>
</rss>
