<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>TIL on Jeha00 DevLog</title>
    <link>http://jeha00.github.io/tags/til/</link>
    <description>Recent content in TIL on Jeha00 DevLog</description>
    <image>
      <url>http://jeha00.github.io/47</url>
      <link>http://jeha00.github.io/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 15 May 2022 20:26:29 +0900</lastBuildDate><atom:link href="http://jeha00.github.io/tags/til/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[TIL] Python basic 45: Overriding vs Overloading</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_45_overriding_overloading/</link>
      <pubDate>Sun, 15 May 2022 20:26:29 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_45_overriding_overloading/</guid>
      <description>OOP에서 사용하는 overriding과 overloading에 대해 알아본다. 그리고, multipledispatch module을 사용하여 overloading을 구현한다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 44: Property</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_44_property/</link>
      <pubDate>Thu, 12 May 2022 15:37:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_44_property/</guid>
      <description>첫 번째, method를 사용하여 getter와 setter를 구현한다. 두 번째, 첫 번째보다 pythonic way인 property를 사용하여 구현해보는데, property 방법 2가지 중 decorator를 사용하여 getter, setter, deleter를 구현해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 43: Underscore</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_43_underscore/</link>
      <pubDate>Wed, 11 May 2022 13:27:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_43_underscore/</guid>
      <description>Python에서 underscore(_)가 어떻게 쓰이는지 알아보고, 그 중에서 Access modifier 접근 지정자 Public, Protected, private 각각에 대해 알아본다. 그리고, Private의 경우, naming mangling와 연결하여 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 09: 교착 상태</title>
      <link>http://jeha00.github.io/post/os/os_chapter_09_%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C/</link>
      <pubDate>Tue, 10 May 2022 20:38:17 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_09_%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C/</guid>
      <description>교착 상태(deadlock)이란 무엇이고, deadlock 발생 조건 4가지는 무엇이며, 이에 따라 deadlock 처리 방법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 08: 프로세스 동기화 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_2/</link>
      <pubDate>Tue, 10 May 2022 20:38:04 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_2/</guid>
      <description>프로세스 동기화의 전통적인 문제 3가지와 semaphore를 개선한 방법인 monitor에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 08: 프로세스 동기화 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_1/</link>
      <pubDate>Wed, 04 May 2022 20:53:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_1/</guid>
      <description>Race condition이란 무엇이고, 이 race condition은 OS에서 언제 발생되며, 이를 해결하기 위한 방법으로 SW 방법과 SW 방법에는 무엇이 있는지를 배운다. 또한, Semaphore가 무엇인지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 07: 메모리 관리 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_2/</link>
      <pubDate>Thu, 28 Apr 2022 16:13:57 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_2/</guid>
      <description>불연속 할당 방법인 pagin 기법, segmentation 기법, paged segmentation 기법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 07: 메모리 관리 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_1/</link>
      <pubDate>Thu, 28 Apr 2022 16:13:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_1/</guid>
      <description>logical address와 physical address를 어떻게 mapping하는지, 메모리 관리와 관련된 용어 4가지에 대해 알아보고, 물리적 메모리의 할당 방식 연속할당과 불연속할당 방식 중 연속할당에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 06: CPU scheduling</title>
      <link>http://jeha00.github.io/post/os/os_chapter_06_cpu_scheduling/</link>
      <pubDate>Fri, 22 Apr 2022 18:50:51 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_06_cpu_scheduling/</guid>
      <description>Bound process를 중심으로 CPU 스케쥴러가 왜 필요한지, 스케쥴링의 성능 척도는 무엇인지, CPU sheduling 알고리즘의 종류에는 무엇이 있고, 이 알고리즘 평가는 어떻게 이뤄지는지 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 05: 프로세스 관리</title>
      <link>http://jeha00.github.io/post/os/os_chapter_05_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Mon, 18 Apr 2022 23:25:25 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_05_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EA%B4%80%EB%A6%AC/</guid>
      <description>프로세스란 무엇인지, 프로세스의 상태는 어떻게 흘러가는지, 문맥 교환이란 무엇인지, 프로세스가 어떻게 생성되고 종료되는지, 프로세스끼리 협력은 어떻게 하는지, thread는 무엇인지 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 04: 프로그램의 구조와 실행</title>
      <link>http://jeha00.github.io/post/os/os_chapter_04_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98%EA%B5%AC%EC%A1%B0%EC%99%80%EC%8B%A4%ED%96%89/</link>
      <pubDate>Fri, 15 Apr 2022 00:27:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_04_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98%EA%B5%AC%EC%A1%B0%EC%99%80%EC%8B%A4%ED%96%89/</guid>
      <description>프로그램의 구조와 실행에 대해 설명한다. 예를 들어 프로그램의 주소영역, PCB, Program counter, 일반 명령과 특권 명령, Virtual memory, kernel mode와 user mode 등등을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 03: 컴퓨터 시스템의 동작원리 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_2/</link>
      <pubDate>Thu, 14 Apr 2022 14:54:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_2/</guid>
      <description>입출력 구조, DMA, 저장장치의 구조 그리고 계층구조에 대해 알아본다. 또한, 하드웨어, 메모리, CPU의 각 보안 방법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 03: 컴퓨터 시스템의 동작원리 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_1/</link>
      <pubDate>Wed, 13 Apr 2022 13:55:26 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_1/</guid>
      <description>I/O 연산이 무엇이고, controller와 local buffer가 무엇이고, 입출력 연산이 Interrupt를 중심으로 어떻게 진행되는지를 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 42: Context manager</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_42_contextmanager/</link>
      <pubDate>Tue, 12 Apr 2022 13:09:09 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_42_contextmanager/</guid>
      <description>context manager가 무엇이고, 이를 with, class, decorator를 사용하여 여러 방법으로 구현해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 41: Shallow copy &amp; Deep copy</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_41_shallowdeepcopy/</link>
      <pubDate>Mon, 11 Apr 2022 20:18:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_41_shallowdeepcopy/</guid>
      <description>Shallow copy 와 Deep copy가 각각 무엇이고, 무슨 차이인지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 40: Call by object reference</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_40_callbyobjectreference/</link>
      <pubDate>Sun, 10 Apr 2022 15:54:18 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_40_callbyobjectreference/</guid>
      <description>python의 변수를 만드는 원리인 object reference에 대해 알아보고, 파이썬의 호출 방식인 call by object reference에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 39: Map, Filter, Reduce</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_39_mapfilterreduce/</link>
      <pubDate>Sat, 09 Apr 2022 14:45:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_39_mapfilterreduce/</guid>
      <description>High-order function의 대표적인 예인 map, filter, reduce에 대해 lambda, def, closure로 구현해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 38: Futures</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_38.futures/</link>
      <pubDate>Wed, 06 Apr 2022 21:34:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_38.futures/</guid>
      <description>인프런 파이썬 level 4 과정의 기반으로 대략적으로 학습하는 내용이다. 구체적으로 Synchro와 Asynchro가 각각 무엇을 의미하는지, threadpool이란 무엇인지, concurrent.futures package에서 wait과 as_completed module에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 02: Introduction to Operating System</title>
      <link>http://jeha00.github.io/post/os/os_chapter_02_%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C_%EA%B0%9C%EC%9A%94/</link>
      <pubDate>Tue, 05 Apr 2022 17:43:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_02_%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C_%EA%B0%9C%EC%9A%94/</guid>
      <description>운영체제란 무엇이고, 무슨 역할을 하는지, 어떻게 분류되는지, 그리고 CPU, 메모리, 입출력 장치의 대략적인 관리 mechanism에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 37: Coroutine</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_37_coroutine/</link>
      <pubDate>Sat, 02 Apr 2022 21:15:33 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_37_coroutine/</guid>
      <description>첫 번째, Thread, Multi-thread 그리고 Coroutine이 무엇인지 알아보면서, coroutine이 왜 중요한지를 이해한다. 두 번째, Coroutine을 구현해보면서 Generator와의 차이를 통해 Coroutine을 이해한다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 36: Generator 2</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_36_generator_2/</link>
      <pubDate>Fri, 01 Apr 2022 19:57:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_36_generator_2/</guid>
      <description>Generator 1에 이어서 본격적으로 Generator에 대해 알아본다. 그리고, Generator와 관련된 중요 함수들도 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 35: Generator 1</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_35_generator_1/</link>
      <pubDate>Wed, 30 Mar 2022 14:17:57 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_35_generator_1/</guid>
      <description>첫 번째, 병행성과 병렬성이란 무엇인지 각 개념에 대해 알아본다.  두 번째, Generator를 이해하기 위해 __iter__와 __next__에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 34: Decorator</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_34_decorator/</link>
      <pubDate>Tue, 29 Mar 2022 23:34:52 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_34_decorator/</guid>
      <description>Decorator(데코레이터)가 왜 중요한지, 왜 사용해야 하는지 그리고 작성하기 어려운 지에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 33: Closure</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_33_closure/</link>
      <pubDate>Mon, 28 Mar 2022 23:38:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_33_closure/</guid>
      <description>Closure를 설명하기 위해서 global variable, local variable에 추가하여 free variable에 대해 설명하고, 왜 closure가 필요한지, closure의 잘못된 사용법을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 32: LEGB rules and Memory structures</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_32_legb_rules/</link>
      <pubDate>Sun, 27 Mar 2022 23:53:06 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_32_legb_rules/</guid>
      <description>LEGB rules 즉 Local, Enclosing, global(or module), built-in varialbe의 scope에 대해 알아본다. 그리고, Python Memory structure가 어떤지 개괄적으로 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 31: First-class</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_31_firstclass/</link>
      <pubDate>Fri, 25 Mar 2022 20:42:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_31_firstclass/</guid>
      <description>일급 함수(일급 객체, first-class)란 무엇인지 알고, 일급 함수의 예인 lambda function, Callable, Partial에 대해 알아본다.  그리고 추가적으로 Signature에 대해 간단히 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 30: Sort VS Sorted</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_30_sortvssorted_array/</link>
      <pubDate>Thu, 24 Mar 2022 23:01:10 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_30_sortvssorted_array/</guid>
      <description>sort와 sorted의 차이를 알아보고, Array data type 에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 29: Data Model</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_29_datamodel/</link>
      <pubDate>Wed, 23 Mar 2022 23:24:24 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_29_datamodel/</guid>
      <description>Python data model을 상세히 분류하여 mutable과 immutable의 차이가 무엇인지,  list comprehension이 무엇인지, unpacking을 tuple에 어떻게 구현하는지, immutable dictionary와 set에 대해 조금 더 깊이 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 28: Namedtuple</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_28_namedtuple/</link>
      <pubDate>Tue, 22 Mar 2022 09:00:37 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_28_namedtuple/</guid>
      <description>Data Model의 한 종류인 namedtuple에 대해 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 27: Special Method</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_27_specialmethod/</link>
      <pubDate>Mon, 21 Mar 2022 17:14:36 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_27_specialmethod/</guid>
      <description>지난 번 Python basic 26 Class advanced에 이어서 class 안에 정의되는 built-in method인 special method에 대해 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP Header 2</title>
      <link>http://jeha00.github.io/post/network/network_http_8/</link>
      <pubDate>Fri, 18 Mar 2022 21:51:01 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_8/</guid>
      <description>검증 헤더와 조건부 요청 헤더의 종류, 그중 캐시 관련 헤더에 대해서 알아본다. 그리고, 프록시 서버와 원(Origin) 서버의 차이와 캐시를 어떻게 무효화하는지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP Header 1</title>
      <link>http://jeha00.github.io/post/network/network_http_7/</link>
      <pubDate>Thu, 17 Mar 2022 20:17:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_7/</guid>
      <description>representation, 콘텐츠 협상, 전송 방식, 일반 정보, 특별 정보, 인증 그리고 쿠키에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 26: class advanced</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_26_class2/</link>
      <pubDate>Wed, 16 Mar 2022 14:28:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_26_class2/</guid>
      <description>instance의 self가 무엇을 의미하는지, dir과 &lt;code&gt;__dict__&lt;/code&gt;가 무슨 차이인지, 그리고 method 3종류에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP status</title>
      <link>http://jeha00.github.io/post/network/network_http_6/</link>
      <pubDate>Tue, 15 Mar 2022 10:14:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_6/</guid>
      <description>HTTP status 2xx, 3xx, 4xx, 5xx에 대해 각각 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP method use</title>
      <link>http://jeha00.github.io/post/network/network_http_5/</link>
      <pubDate>Mon, 14 Mar 2022 21:41:29 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_5/</guid>
      <description>HTTP method를 가지고 클라이언트가 서버에 어떻게 데이터를 전송하는지, 그리고 API 설계에는 무슨 종류가 있는지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 25: 
_
_str
_
_ vs 
_
_repr
_
_</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_25_str_repr/</link>
      <pubDate>Sun, 13 Mar 2022 16:33:19 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_25_str_repr/</guid>
      <description>__str__ 과 __repr__ 이 각각 무엇인지 그리고, 이 둘의 차이가 뭔지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 24: Procedural Programming vs OOP</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_24_oop/</link>
      <pubDate>Sat, 12 Mar 2022 23:16:27 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_24_oop/</guid>
      <description>절차형 프로그래밍과 객체지향 프로그래밍 각 방식으로 작성하여 직접 차이를 느껴본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 23:  if 
_
_name
_
_ == &#39;
_
_main
_
_&#39;</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_23_ifnamemain/</link>
      <pubDate>Fri, 11 Mar 2022 20:33:01 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_23_ifnamemain/</guid>
      <description>&#39;
_
_name
_
_&amp;rsquo; 과 &#39;
_
_main
_
_&amp;rsquo; 를 이해한 걸 바탕으로, if
_
_name
_
_ == &#39;
_
_main
_
_&amp;rsquo; 에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP method</title>
      <link>http://jeha00.github.io/post/network/network_http_4/</link>
      <pubDate>Thu, 10 Mar 2022 20:32:24 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_4/</guid>
      <description>HTTP method인 GET, POST, PUT, PATCH, DELETE 그리고 속성에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP basic</title>
      <link>http://jeha00.github.io/post/network/network_http_3/</link>
      <pubDate>Wed, 09 Mar 2022 17:56:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_3/</guid>
      <description>HTTP란 무엇이고, HTTP의 특징인 클라이언트 서버 구조, stateless, connectionless, HTTP mesage에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP intro. 2: URI 와 웹 브라우저 요청 흐름</title>
      <link>http://jeha00.github.io/post/network/network_http_2/</link>
      <pubDate>Tue, 08 Mar 2022 11:50:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_2/</guid>
      <description>URI, URL, URN 에 대해 알아보고, 웹 브라우저의 요청 흐름에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP intro. 1: Internet network</title>
      <link>http://jeha00.github.io/post/network/network_http_1/</link>
      <pubDate>Mon, 07 Mar 2022 21:16:44 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_1/</guid>
      <description>HTTP를 학습하기 위해 사전지식으로 IP,TCP/UDP, PORT, DNS를 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 22: NoneTypeError</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_22_nonetypeerror/</link>
      <pubDate>Sat, 05 Mar 2022 23:47:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_22_nonetypeerror/</guid>
      <description>Python basic 과정을 마치고, 간단한 프로젝트로 Hangman game을 만들었다. 그 과정에서 NoneTypeError가 발생했다. &amp;lsquo;TypeError:&amp;lsquo;NoneType&amp;rsquo; object is not subscriptable&amp;rsquo; 에 대해 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 21: csv.read, write</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_21_filereadwrite_2/</link>
      <pubDate>Fri, 04 Mar 2022 14:31:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_21_filereadwrite_2/</guid>
      <description>with open() as 를 사용하여 외부 csv 파일을 읽고, 쓰는 방법을 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 20: with open as</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_20_filewriteread_1/</link>
      <pubDate>Fri, 04 Mar 2022 14:30:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_20_filewriteread_1/</guid>
      <description>with open() as 함수를 사용해서 외부 파일을 읽고, 작성하는 방법을 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 19: external functions</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_19_external_functions/</link>
      <pubDate>Thu, 03 Mar 2022 01:34:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_19_external_functions/</guid>
      <description>외장 함수를 실행하는 방법과 외장 함수의 여러 종류들을 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 18: built-in functions</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_18_built_in_fuctions/</link>
      <pubDate>Thu, 03 Mar 2022 01:33:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_18_built_in_fuctions/</guid>
      <description>내장 함수란 무엇이고, 내장 함수에서 자주 사용된 것들로 실습을 해보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 17: try ~ exception</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_17_try_exception/</link>
      <pubDate>Thu, 03 Mar 2022 01:33:28 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_17_try_exception/</guid>
      <description>Error의 종류와 예외 처리문에 대해 알아보고, 일부러 에러를 일으키는 이유와 방법에 대해 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 16: package</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_16/</link>
      <pubDate>Thu, 03 Mar 2022 01:32:28 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_16/</guid>
      <description>package란 무엇인지, package의 경로와 함수를 어떻게 실행하는지, &lt;strong&gt;init&lt;/strong&gt;.py가 존재하는 이유에 대해 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 15: module</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_15/</link>
      <pubDate>Wed, 02 Mar 2022 00:51:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_15/</guid>
      <description>Module이란 무엇인지, Module을 어떻게 사용하는지, Module 관련 함수에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 14: class</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_14/</link>
      <pubDate>Wed, 02 Mar 2022 00:51:20 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_14/</guid>
      <description>OOP의 의미가 무엇인지, Class와 Instance의 차이가 무엇인지, self가 무엇을 의미하는지, class variable과 instance variable에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 13: input</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_13/</link>
      <pubDate>Wed, 02 Mar 2022 00:51:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_13/</guid>
      <description>input을 통한 사용자 입력과 형 변환(type conversion) 입력을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 12: Method</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_12/</link>
      <pubDate>Wed, 02 Mar 2022 00:50:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_12/</guid>
      <description>함수의 중요성 및 선언, Packing &amp;amp; Unpacking, 중첩 함수(Nested function), 람바 함사(익명 함수), 함수 Type hint 에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 11: 흐름 제어문 (while 반복문)</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_11/</link>
      <pubDate>Wed, 02 Mar 2022 00:49:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_11/</guid>
      <description>While 반복문의 기본 사용법, break &amp;amp; continue 문, While ~ else 구문, 무한 반복 구문에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 10: 흐름 제어문 (for 반복문)</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_10/</link>
      <pubDate>Tue, 01 Mar 2022 11:53:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_10/</guid>
      <description>for ~ range의 3가지 pattern, for문에 interable 자료형 활용하기, break 문과 continue 문 사용하기, for ~ else 구문에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 9: 흐름 제어문 (if 조건문)</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_9/</link>
      <pubDate>Tue, 01 Mar 2022 11:52:55 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_9/</guid>
      <description>조건문의 기본 형식, 연산자를 통해서 제어하는 방법, 참거짓을 의미하는 값들, 다중 및 중첩 조건문, in &amp;amp; not in 으로 제어하는 방법을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 8: set</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_8/</link>
      <pubDate>Tue, 01 Mar 2022 11:52:52 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_8/</guid>
      <description>set 선언법, set type conversion, 집합 자료형 활용을 위한 함수, set type의 수정하기를 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 7: dictionary </title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_7/</link>
      <pubDate>Tue, 01 Mar 2022 11:52:48 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_7/</guid>
      <description>dictionary type의 선언, 출력과 수정 그리고, dictionary에 사용되는 함수에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 6: tuple</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_6/</link>
      <pubDate>Tue, 01 Mar 2022 11:52:41 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_6/</guid>
      <description>list와 tuple의 차이. tuple의 indexing, slicing, 연산. 그리고, tuple의 중요한 특징 중 하나인 packing &amp;amp; unpacking에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 5: list</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_5/</link>
      <pubDate>Mon, 28 Feb 2022 19:49:04 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_5/</guid>
      <description>list의 생성, indexing, slicing, 연산, list에 쓰이는 함수 그리고, list를 수정하고 삭제하는 방법에 대해 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 4: string</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_4/</link>
      <pubDate>Mon, 28 Feb 2022 19:45:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_4/</guid>
      <description>string type의 생성부터 연산, len 함수 사용, type conversion, 문자형 함수 그리고 slicing을 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 3: numeric data</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_3/</link>
      <pubDate>Mon, 28 Feb 2022 18:51:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_3/</guid>
      <description>첫 번째, python의 자료형 종류에는 무엇이 있는지 알아본다. 두 번째, 숫자형 데이터 타입의 선언, 연산, 그리고 형 변환에 대해 중점적으로 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 2: print 사용법</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_2/</link>
      <pubDate>Mon, 28 Feb 2022 18:50:13 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_2/</guid>
      <description>첫 번째 print 함수를 사용할 때, separator와 end를 사용하여 다양하게 사용하는 것과 두 번째, stirng type, numeric type을 다양하게 출력을 해봄으로서 print 함수에 대해 이해해보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 1: 변수 선언</title>
      <link>http://jeha00.github.io/post/python_basic/python_basic_1/</link>
      <pubDate>Mon, 28 Feb 2022 18:47:51 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python_basic/python_basic_1/</guid>
      <description>첫 번째, 기본적인 선언 방법과 동시 선언, 재선언을 알아본다. 두 번째, 각 선언에 따른 id 값을 확인하여 파이썬 내부 원리를 이해한다. 세 번째, 선언 방법의 종류인 Camel case, Pascal case, Snake case가 무엇인지 알아본다.</description>
    </item>
    
  </channel>
</rss>
