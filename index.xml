<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jeha00 DevLog</title>
    <link>http://jeha00.github.io/</link>
    <description>Recent content on Jeha00 DevLog</description>
    <image>
      <url>http://jeha00.github.io/47</url>
      <link>http://jeha00.github.io/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 08 Nov 2022 23:19:07 +0900</lastBuildDate><atom:link href="http://jeha00.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS study: DevOps란 무엇인가? &amp; AWS를 배워야하는 이유</title>
      <link>http://jeha00.github.io/post/aws/lecturenote01/</link>
      <pubDate>Tue, 08 Nov 2022 23:19:07 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/aws/lecturenote01/</guid>
      <description>백엔드 개발자의 업무 범위가 과거와 달리 변하면서 DevOps로 어떻게 이어지고, DevOps와 MSA가 어떻게 연결되어 있는지, 그래서 왜 AWS를 배워야하는지 알아본다.</description>
    </item>
    
    <item>
      <title>Django study: API url 만드는 방법 3가지 - APIView, @api_view([]), ModelViewSet</title>
      <link>http://jeha00.github.io/post/django/drf_study02/</link>
      <pubDate>Sat, 05 Nov 2022 13:36:56 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/drf_study02/</guid>
      <description>API url을 만드는 방법으로 APIView, @api_view() 그리고 ModelViewSet을 사용한다. 이 방법들 중에서 자주 사용하는 방식은 APIView다. ModelViewSet은 중복을 방지하여 여러 url들을 만들어주지만, 최적화가 어렵기 때문이다.</description>
    </item>
    
    <item>
      <title>Docker study: Docker 학습을 위한 OS background knowledge</title>
      <link>http://jeha00.github.io/post/docker/os-for-docker/</link>
      <pubDate>Mon, 31 Oct 2022 01:00:56 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/docker/os-for-docker/</guid>
      <description>Docker 학습을 시작하기에 앞서 Docker가 왜 필요한지, 컴퓨터 시스템의 핵심은 무엇이고, 운영체제는 무슨 역할을 하는지, process와 thread란 무엇인지, 메모리 구조는 어떻게 구성되어 있는지, 마지막으로 컨테이너에 대해 체험해본다.</description>
    </item>
    
    <item>
      <title>Django study: DRF의 직렬화(serialization)와 역직렬화(deserialization)</title>
      <link>http://jeha00.github.io/post/django/drf_study01/</link>
      <pubDate>Fri, 28 Oct 2022 13:29:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/drf_study01/</guid>
      <description>Django의 library인 Django-RestFramework의 직렬화, 역직렬화 개념과 이를 사용하기 위한 Serializer를 작성해본다.</description>
    </item>
    
    <item>
      <title>Django study: nginx와 uwsgi를 사용한 django application deployment 04 - DB 나누기</title>
      <link>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_4/</link>
      <pubDate>Thu, 20 Oct 2022 18:45:16 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_4/</guid>
      <description>uwsgi, nginx 를 연결한 후, R3에 연결하여 static file을 적용했다. 그 다음으로 DB를 develop 단계와 product 단계로 나눠서 적용하기 위해 DB를 나누는 작업을 해본다.</description>
    </item>
    
    <item>
      <title>Django study: nginx와 uwsgi를 사용한 django application deployment 03 - static file 적용하기</title>
      <link>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_3/</link>
      <pubDate>Wed, 19 Oct 2022 03:31:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_3/</guid>
      <description>uwsgi, nginx 를 연결했으니, R3에 연결하여 static file을 적용해본다.</description>
    </item>
    
    <item>
      <title>Book Study - 클린 코드, 이제는 파이썬이다: Chapter 01 에러와 질문</title>
      <link>http://jeha00.github.io/post/bookstudy/pythoncleancode/chapter01_errorandasking/</link>
      <pubDate>Mon, 17 Oct 2022 16:52:19 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/pythoncleancode/chapter01_errorandasking/</guid>
      <description>알 스웨이가트가 지었고, 박재호님이 번역하신  &amp;lsquo;클린코드, 이제는 파이썬이다&amp;rsquo;를 읽고 학습한 내용이다. 파이썬 에러 메세지가 어떤 내용들로 구성되어 있는지, 그리고 온라인 상에 질문을 할 때 어떻게 질문해야하는지 질문의 올바른 방법을 배운다.</description>
    </item>
    
    <item>
      <title>Django study: nginx와 uwsgi를 사용한 django application deployment 02 - 502 Bad Gateway Error</title>
      <link>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_2/</link>
      <pubDate>Sat, 15 Oct 2022 03:28:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_2/</guid>
      <description>nginx와 uwsgi를 사용한 배포과정에서 발생한 502 Bad Gateway Error에 대한 해결과정과 해결책을 정리해본다.</description>
    </item>
    
    <item>
      <title>Django study: nginx와 uwsgi를 사용한 django application deployment 01 - nginx와 uwsgi 연결하기</title>
      <link>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_1/</link>
      <pubDate>Fri, 14 Oct 2022 03:16:12 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/deployment-with-nginx-uwsgi-ec2_1/</guid>
      <description>django appliation을 nginx와 uwsgi를 사용하여 배포하는 과정을 학습한다.</description>
    </item>
    
    <item>
      <title>Book Study - Clean Code: Chapter 02 변수</title>
      <link>http://jeha00.github.io/post/bookstudy/cleancode/chatper02_name/</link>
      <pubDate>Sat, 08 Oct 2022 21:15:08 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/cleancode/chatper02_name/</guid>
      <description>로버트 C. 마틴이 지은 클린 코드의 Chapter 02를 읽고 남긴 후기다. 변수를 지을 때 유의사항들에 알려줬고, 파이썬 코드로 코드 개선 작업을 직접 해보았다. 변수 작명에 사용자의 의도를 어떻게 명확히 드러내야하는지 알았다.</description>
    </item>
    
    <item>
      <title>Book Study - Clean Code: Chapter 01 클린 코드</title>
      <link>http://jeha00.github.io/post/bookstudy/cleancode/chatper01_cleancode/</link>
      <pubDate>Thu, 06 Oct 2022 21:14:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/cleancode/chatper01_cleancode/</guid>
      <description>로버트 C. 마틴이 지은 클린 코드의 Chapter 01를 읽고 남긴 후기다. 왜 깨끗한 코드로 작성해야하는지, 이 태도를 가져야만 하는 이유에 대해 설명하는 소단원이었다. 보다 거시적인 관점으로 봤을 때, 깨끗한 코드가 시간을 절약한다.</description>
    </item>
    
    <item>
      <title>Book Study - 1일 1로그 100일 완성 IT 지식: 33 - 40 days</title>
      <link>http://jeha00.github.io/post/bookstudy/1-1-100/33-40day/</link>
      <pubDate>Thu, 06 Oct 2022 00:34:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/1-1-100/33-40day/</guid>
      <description>IT 분야의 문해력을 기르기 위해서 꾸준히 매일 작은 지식들을 학습하고자 1일 1로그 100일 완성 IT 지식을 학습한다.</description>
    </item>
    
    <item>
      <title>Book Study - 1일 1로그 100일 완성 IT 지식: 24 - 32 days</title>
      <link>http://jeha00.github.io/post/bookstudy/1-1-100/24-32day/</link>
      <pubDate>Sun, 25 Sep 2022 21:19:29 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/1-1-100/24-32day/</guid>
      <description>IT 분야의 문해력을 기르기 위해서 꾸준히 매일 작은 지식들을 학습하고자 1일 1로그 100일 완성 IT 지식을 학습한다.</description>
    </item>
    
    <item>
      <title>Book Study - 함께 자라기: 애자일로 가는 길 review 01</title>
      <link>http://jeha00.github.io/post/bookstudy/agile/review01/</link>
      <pubDate>Mon, 19 Sep 2022 23:04:19 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/agile/review01/</guid>
      <description>김창준님이 작성하신 함께 자라기- 애자일로 가는 길에 대한 후기</description>
    </item>
    
    <item>
      <title>Book Study - 1일 1로그 100일 완성 IT 지식: 18 - 23 days</title>
      <link>http://jeha00.github.io/post/bookstudy/1-1-100/18-23day/</link>
      <pubDate>Sun, 18 Sep 2022 23:03:12 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/1-1-100/18-23day/</guid>
      <description>IT 분야의 문해력을 기르기 위해서 꾸준히 매일 작은 지식들을 학습하고자 1일 1로그 100일 완성 IT 지식을 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL]Linux: 기본 명령어 익히기 - shutdown과 그 과정</title>
      <link>http://jeha00.github.io/post/linux/lecturenote06/</link>
      <pubDate>Mon, 12 Sep 2022 15:00:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/linux/lecturenote06/</guid>
      <description>지난 내용에 이어서 linux의 기본 명령어로 shutdown과 이 명령어가 이뤄지는 과정에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL]Linux: 기본 명령어 익히기 - date, rdate, file, find</title>
      <link>http://jeha00.github.io/post/linux/lecturenote05/</link>
      <pubDate>Sun, 11 Sep 2022 14:50:32 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/linux/lecturenote05/</guid>
      <description>지난 내용에 이어서 linux의 기본 명령어들 중 date, rdate, file, find에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>Book Study - 1일 1로그 100일 완성 IT 지식: 12 - 17 days</title>
      <link>http://jeha00.github.io/post/bookstudy/1-1-100/12-17day/</link>
      <pubDate>Fri, 09 Sep 2022 11:55:36 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/1-1-100/12-17day/</guid>
      <description>IT 분야의 문해력을 기르기 위해서 꾸준히 매일 작은 지식들을 학습하고자 1일 1로그 100일 완성 IT 지식을 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL]Linux: 기본 명령어 익히기 - cat, head, tail, more, less, nl</title>
      <link>http://jeha00.github.io/post/linux/lecturenote04/</link>
      <pubDate>Thu, 08 Sep 2022 14:50:13 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/linux/lecturenote04/</guid>
      <description>지난 내용에 이어서 linux의 기본 명령어들 중 cat, head, tail, more, less, nl에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL]Linux: 기본 명령어 익히기 - mkdir,rmdir, rm, alias, touch</title>
      <link>http://jeha00.github.io/post/linux/lecturenote03/</link>
      <pubDate>Wed, 07 Sep 2022 14:47:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/linux/lecturenote03/</guid>
      <description>지난 내용에 이어서 linux의 기본 명령어들 중 mkdir,rmdir, rm, alias, touch에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>Django study: 가상환경 자동 활성화를 위한 directory 구조 및 설치 경로</title>
      <link>http://jeha00.github.io/post/django/virtualenv_path/</link>
      <pubDate>Wed, 07 Sep 2022 14:37:03 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/virtualenv_path/</guid>
      <description>경로에 들어오면 자동적으로 가상환경이 활성화되는 directory 구조에 대해 이전 방식과 비교하여 정리해놓는다.</description>
    </item>
    
    <item>
      <title>[TIL]Linux: 기본 명령어 익히기 - pwd, cd, ls, cp, mv</title>
      <link>http://jeha00.github.io/post/linux/lecturenote02/</link>
      <pubDate>Tue, 06 Sep 2022 14:43:45 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/linux/lecturenote02/</guid>
      <description>linux의 기본 명령어들 중 pwd, cd, ls, cp, mv에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL]Linux: terminal에서 AWS ec2 instance 접속 환경 조성하기</title>
      <link>http://jeha00.github.io/post/linux/lecturenote01/</link>
      <pubDate>Mon, 05 Sep 2022 21:43:21 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/linux/lecturenote01/</guid>
      <description>aws 사이트가 아닌 terminal에서 손쉽게 aws ec2 인스턴스에 접속할 수 있는 환경을 조성해보고, 그 과정에서 error 상황과 대처법을 기록했다.</description>
    </item>
    
    <item>
      <title>Book Study - 1일 1로그 100일 완성 IT 지식: 7 - 11 days</title>
      <link>http://jeha00.github.io/post/bookstudy/1-1-100/7-11day/</link>
      <pubDate>Sat, 03 Sep 2022 10:55:05 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/1-1-100/7-11day/</guid>
      <description>IT 분야의 문해력을 기르기 위해서 꾸준히 매일 작은 지식들을 학습하고자 1일 1로그 100일 완성 IT 지식을 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL]Web Application Basic study: 4, 5, 6, 7 계층</title>
      <link>http://jeha00.github.io/post/network/webapplicationbasic03/</link>
      <pubDate>Wed, 31 Aug 2022 14:23:03 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/webapplicationbasic03/</guid>
      <description>이번에는 4계층부터 7계층까지 각각 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL]Web Application Basic study: 1,2,3 계층</title>
      <link>http://jeha00.github.io/post/network/webapplicationbasic02/</link>
      <pubDate>Tue, 30 Aug 2022 18:50:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/webapplicationbasic02/</guid>
      <description>OSI 7 layer는 전체적으로 무슨 층으로 구성되어 있고, 1 계층인 물리계층, 2 계층인 데이터링크 계층, 3 계층인 네트워크 계층에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL]Web Application Basic study: client와 server / web server structure</title>
      <link>http://jeha00.github.io/post/network/webapplicationbasic01/</link>
      <pubDate>Mon, 29 Aug 2022 17:14:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/webapplicationbasic01/</guid>
      <description>클라이언트와 서버란 무엇인지, 서버의 종류에는 무엇이 있고, 웹서버 - WSGI - 웹 애플리케이션 - DB라는 서버 구조에서 각각에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>Book Study  - 1일 1로그 100일 완성 IT 지식: 1 - 6 days</title>
      <link>http://jeha00.github.io/post/bookstudy/1-1-100/1-6day/</link>
      <pubDate>Sun, 28 Aug 2022 23:10:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/bookstudy/1-1-100/1-6day/</guid>
      <description>IT 분야의 문해력을 기르기 위해서 꾸준히 매일 작은 지식들을 학습하고자 1일 1로그 100일 완성 IT 지식을 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] DB MySQL study: Query문 학습 1</title>
      <link>http://jeha00.github.io/post/db/mysql_01/</link>
      <pubDate>Fri, 26 Aug 2022 23:46:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/db/mysql_01/</guid>
      <description>MySQL의 SQL에 대해 학습을 시작한다. SELECT, FROM, WHERE 와 비교연산자, 논리연산자, 산술연산자에 대해 학습해본다. 또한, 산술연산자에는 MySQL만의 오류가 있어서 날짜 계산 시, 어떻게 해야할지도 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] HTML &amp; CSS study - CSS 02</title>
      <link>http://jeha00.github.io/post/html_css/study03/</link>
      <pubDate>Fri, 12 Aug 2022 22:35:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/html_css/study03/</guid>
      <description>Block와 Inline의 차이는 무엇이고, box의 속성 3가지인 border, padding, margin에 대해 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] Python study: Serialization 과 json.loads, dumps()  </title>
      <link>http://jeha00.github.io/post/python/a_s_o/2_jsonmodule/</link>
      <pubDate>Sun, 31 Jul 2022 23:38:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/a_s_o/2_jsonmodule/</guid>
      <description>Serialization이 무엇을 의미하고, 이에 따라 flat data, nested data가 무슨 형태의 data인지 알아본다. 그리고, flat data의 한 종류인 json과 관련된 module을 사용해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python study: Window에서 Asyncio RuntimeError</title>
      <link>http://jeha00.github.io/post/python/a_s_o/1_asyncio-runtimeerror/</link>
      <pubDate>Fri, 29 Jul 2022 23:38:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/a_s_o/1_asyncio-runtimeerror/</guid>
      <description>비동기 모듈을 사용하면서 겪은 Asyncio RuntimeError의 원인과 해결방법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 14 - GitHub Actions 체험, Octotree, GitHub CLI</title>
      <link>http://jeha00.github.io/post/git/lec_chapter14-02/</link>
      <pubDate>Fri, 29 Jul 2022 00:29:03 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter14-02/</guid>
      <description>GitHub Action이 무엇인지 체험해보고, Github repository를 살펴보는데 좋은 확장 프로그램인 &amp;lsquo;Octotree&amp;rsquo;를 사용해본다. 마지막으로 GitHub CLI를 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 14 - SSH &amp; GPG</title>
      <link>http://jeha00.github.io/post/git/lec_chapter14-01/</link>
      <pubDate>Tue, 26 Jul 2022 00:28:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter14-01/</guid>
      <description>SSH key를 생성하고, 계정에 등록하여 remote 추가 시 HTTP가 아닌 SSH를 사용하는 방법과 GPG key를 생성하고 계정에 등록하여 local에서 작업해도 &amp;lsquo;Verified&amp;rsquo;가 뜨는 것 실습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 13 - pull request &amp; issue</title>
      <link>http://jeha00.github.io/post/git/lec_chapter13/</link>
      <pubDate>Sun, 24 Jul 2022 00:12:33 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter13/</guid>
      <description>협업 시에 사용하는 GitHub pull request를 하는 방법과 GitHub issue에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] HTML &amp; CSS study - CSS 01</title>
      <link>http://jeha00.github.io/post/html_css/study02/</link>
      <pubDate>Thu, 21 Jul 2022 18:24:57 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/html_css/study02/</guid>
      <description>CSS 입력방식인 inline과 external 방식이 각각 무엇인지, css 속성값을 입력하는 방식과 html tag의 속성인 id, class를 사용하여 css 속성 값을 입력하는 방식을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 12 - Gitmoji &amp; git submodules</title>
      <link>http://jeha00.github.io/post/git/lec_chapter12/</link>
      <pubDate>Wed, 20 Jul 2022 21:21:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter12/</guid>
      <description>hook을 사용하여 gitmoji 를 사용하는 방법을 학습한 후, submodule이란 무엇이고 어떠한 장점이 있는지를 학습한다. 그리고, git submodule 명령어를 통해 submodule 연결을 해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 11 - Git bisect</title>
      <link>http://jeha00.github.io/post/git/lec_chapter11-04/</link>
      <pubDate>Tue, 19 Jul 2022 21:12:20 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter11-04/</guid>
      <description>git bisect 명령어를 통해서 이진 탐색과 commit hash number를 이용하여 오류 지점을 찾아본다.</description>
    </item>
    
    <item>
      <title>[TIL] HTML &amp; CSS study - HTML이란?</title>
      <link>http://jeha00.github.io/post/html_css/study01/</link>
      <pubDate>Mon, 18 Jul 2022 18:24:51 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/html_css/study01/</guid>
      <description>HTML, CSS가 무엇이고, 브라우저에서 무슨 역할을 하는지, html의 tag란 무엇인지, semantic tag과 non-semantic tag란 무엇인지 학습한다. 그리고, tag의 다양한 속성 중 몇 가지를 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 11 - Git blame &amp; GitLens</title>
      <link>http://jeha00.github.io/post/git/lec_chapter11-03/</link>
      <pubDate>Mon, 18 Jul 2022 15:16:52 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter11-03/</guid>
      <description>git blame 명령어와 VSC의 extension program인 GitLens를 통해 각 라인의 작성자를 확인하는 법을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 11 - Git diff</title>
      <link>http://jeha00.github.io/post/git/lec_chapter11-02/</link>
      <pubDate>Sun, 17 Jul 2022 19:14:40 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter11-02/</guid>
      <description>git diff 명령어를 통해서 현재 파일들의 변경사항, staging area에 올라간 파일들의 변경사항, 브랜치 간의 변경사항, 커밋 간의 변경사항들 여러 관계 사이의 변경사항을 알 수 있다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 11 - Git log 자세히 알아보기</title>
      <link>http://jeha00.github.io/post/git/lec_chapter11-01/</link>
      <pubDate>Fri, 15 Jul 2022 15:07:17 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter11-01/</guid>
      <description>git log에 달려있는 여러 옵션들을 사용하여 log를 더 자세히 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - Gitflow</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-05/</link>
      <pubDate>Thu, 14 Jul 2022 13:00:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-05/</guid>
      <description>협업 시 여러 branch를 생성하여 어떻게 활용하는지, 각 branch의 이름은 현업에서 주로 사용되는 이름이 있는지 Gitflow를 사용한 브랜치 활용법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - git merge --squash</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-04/</link>
      <pubDate>Wed, 13 Jul 2022 13:00:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-04/</guid>
      <description>git merge &amp;ndash;squash 명령어를 사용해서 다른 브랜치의 여러 커밋들을 rebase와 달리 하나의 커밋으로 묶어서 가져와본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - git rebase --onto</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-03/</link>
      <pubDate>Tue, 12 Jul 2022 23:31:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-03/</guid>
      <description>git rebase &amp;ndash;onto 명령어를 사용하여 다른 브랜치에서 파생된 브랜치를 현재 브랜치로 옮겨서 붙여본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - git cherry-pick</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-02/</link>
      <pubDate>Mon, 11 Jul 2022 23:31:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-02/</guid>
      <description>git cherry-pick 명령어를 사용하여 다른 브랜치에 있는 원하는 commit만 따오는 실습을 해본다.</description>
    </item>
    
    <item>
      <title>Django study: Document tutorial Part 4 따라하기</title>
      <link>http://jeha00.github.io/post/django/doc_tutorial_04/</link>
      <pubDate>Fri, 08 Jul 2022 23:46:04 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/doc_tutorial_04/</guid>
      <description>0. Introduction Write a minimal form use generic views: Less code is better django 공식 문서를 번역하는 작업을 통해 튜토리얼을 진행하여 이해해본다.
이번 tutorial을 통해서 기본적인 설문조사 애플리케이션을 만들 수 있다.
이 애플리케이션은 다음 2가지로 구성된다. 사람들이 설문조사를 보고 투표할 수 있는 &amp;lsquo;public site&amp;rsquo; 설문조사를 더하고, 수정하고, 삭제하는 &amp;lsquo;admin site&amp;rsquo; 1. Write a minimal form Par03에서 만들었던 detail template을 업데이트해보자. 업데이트할 detail template에는 HTML form 요소가 포함된다. &amp;gt; &amp;lt;form action=&amp;#34;{% url &amp;#39;polls:vote&amp;#39; question.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - Fast forwad vs 3-way merge</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-01/</link>
      <pubDate>Fri, 08 Jul 2022 23:31:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-01/</guid>
      <description>git의 merge 원리인 Fast-forward와 3-way merge에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 08 - git reflog</title>
      <link>http://jeha00.github.io/post/git/lec_chapter08-03/</link>
      <pubDate>Thu, 07 Jul 2022 23:31:37 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter08-03/</guid>
      <description>git reset 으로 사라진 커밋을 복구하기 위해서 git reflog 명령어를 통해 더 자세한 commit 번호를 확인 후, git reset &amp;ndash;hard 명령어를 통해서 사라진 커밋을 복구해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 08 - git restore</title>
      <link>http://jeha00.github.io/post/git/lec_chapter08-02/</link>
      <pubDate>Wed, 06 Jul 2022 23:31:33 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter08-02/</guid>
      <description>git restore 명령어를 통해서 첫 번째, 변경 상태를 stage area에서 working directory로 돌려보는 것과 두 번째, 특정 파일을 HEAD나 커밋 해쉬번호를 사용하여 지정된 상태로 복구해보는 것을 해본다.</description>
    </item>
    
    <item>
      <title>Django study: Document tutorial Part 2 따라하기</title>
      <link>http://jeha00.github.io/post/django/doc_tutorial_02/</link>
      <pubDate>Tue, 05 Jul 2022 23:45:49 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/doc_tutorial_02/</guid>
      <description>class를 사용하여 model을 만들면서 Field를 적용해본다. application을 활성화하기 위해 settings.py에 INSTALLED_APPS 에 등록한다. 그리고, migration file을 만든 후, DB에 적용해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 08 - git clean</title>
      <link>http://jeha00.github.io/post/git/lec_chapter08-01/</link>
      <pubDate>Mon, 04 Jul 2022 23:31:28 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter08-01/</guid>
      <description>이번 단원에서는 git에 추적되지 않는 즉, 관리되지 않은 파일들(Untracked file)을 삭제하는 &amp;lsquo;git clean&amp;rsquo;에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>Django study: Document tutorial Part 1 따라하기</title>
      <link>http://jeha00.github.io/post/django/doc_tutorial_01/</link>
      <pubDate>Sun, 03 Jul 2022 23:45:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/doc_tutorial_01/</guid>
      <description>django를 설치한 후, project와 application을 명령어를 통해 만들어보고, view와 URLconf에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 09 - git tag</title>
      <link>http://jeha00.github.io/post/git/lec_chpater09/</link>
      <pubDate>Fri, 01 Jul 2022 20:59:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chpater09/</guid>
      <description>v0.0.0 에서 각 자리가 무엇을 의미하는지, commit에 tag를 다는 명령어인 git tag, 그리고 여러 버전들 중 일부를 release하는 것을 배운다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 07 -  git stash &amp; git commit --amend &amp; git rebase -i</title>
      <link>http://jeha00.github.io/post/git/lec_chapter07-030405/</link>
      <pubDate>Thu, 30 Jun 2022 20:59:37 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter07-030405/</guid>
      <description>커밋하기 애매한 변화를 치워두는 명령어인 git stash, commit message를 수정하는 git commit &amp;ndash;amend, commit 과거 내역들을 수정하는 git rebase -i 를 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 07 - git add -p &amp; git commit -v</title>
      <link>http://jeha00.github.io/post/git/lec_chapter07-02/</link>
      <pubDate>Tue, 28 Jun 2022 17:44:10 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter07-02/</guid>
      <description>변경사항을 보다 쪼갠 hunk 크기로 나눠 staging area에 올리는 명령어인 git add -p 와 변경사항을 확인하고 커밋하는 git commit -v 에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 07 - Commit message 권장사항과 convention </title>
      <link>http://jeha00.github.io/post/git/lec_chapter07-01/</link>
      <pubDate>Tue, 28 Jun 2022 17:44:03 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter07-01/</guid>
      <description>commit message를 작성할 때 권장사항들과 commit message convention에 대해 학습하여 commit message를 보다 체계적으로 작성해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 06 - git help &amp; git config</title>
      <link>http://jeha00.github.io/post/git/lec_chapter06/</link>
      <pubDate>Tue, 28 Jun 2022 17:37:08 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter06/</guid>
      <description>git 명령어가 기억나지 않아 설명서가 필요한 경우 사용하는 &lt;code&gt;git help&lt;/code&gt; 명령어와 &lt;code&gt;git config&lt;/code&gt;를 사용한 git 설정에 대해 자세히 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 05 - git checkout &amp; fetch와 pull의 차이</title>
      <link>http://jeha00.github.io/post/git/lec_chapter05-02/</link>
      <pubDate>Mon, 27 Jun 2022 21:39:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter05-02/</guid>
      <description>다섯 번째, Git의 HEAD를 이동하기 위해서 git checkout 명령어. 마지막으로 fetch와 pull의 차이를 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 05 - git rm, git mv 그리고, git reset의 3가지 옵션 등등</title>
      <link>http://jeha00.github.io/post/git/lec_chapter05-01/</link>
      <pubDate>Mon, 27 Jun 2022 21:39:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter05-01/</guid>
      <description>첫 번째 CVCS에 비해서 Git의 장점이 무엇인지, 두 번째 Git의 3가지 공간(Working directory, Staging area, Directory)이 무엇인지, 세 번째 git rm과 git mv 명령어로 파일이 어떤 영역으로 이동되는지, 네 번째 reset의 3가지 옵션에 대해 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 04 - 원격 사용하기</title>
      <link>http://jeha00.github.io/post/git/lec_chapter04/</link>
      <pubDate>Mon, 27 Jun 2022 11:29:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter04/</guid>
      <description>GitHub에 원격 저장소를 만들고, 원격과 로컬에서 branch를 새롭게 만들어보면서 원격 저장소로부터 pull, push를 사용하여 프로젝트를 동기화 해본다. 마지막으로 이 과정을 소스트리로 실행해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 03 - branch</title>
      <link>http://jeha00.github.io/post/git/lec_chapter03/</link>
      <pubDate>Fri, 24 Jun 2022 14:25:18 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter03/</guid>
      <description>branch를 만든 후, 다른 branch로 이동해본다. 또한, 각 branch끼리 합치는 git merge와 git rebase를 실행하면서 CLI 와 Source tree로 branch 변화를 시각적으로 확인해본다. 마지막으로 병합 시 충돌을 해결해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 02 - reset vs revert</title>
      <link>http://jeha00.github.io/post/git/lec_chapter02/</link>
      <pubDate>Thu, 23 Jun 2022 11:33:57 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter02/</guid>
      <description>git add 와  git commit 으로 변경사항을 stage에 올리고, 저장해본다. 이 과정에서 vim의 몇 가지 명령어를 알아본다.  git reset &amp;ndash;hard / git revert 를 학습하여 과거 시점으로 돌아가는 걸 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 01</title>
      <link>http://jeha00.github.io/post/git/lec_chapter01/</link>
      <pubDate>Wed, 22 Jun 2022 11:33:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter01/</guid>
      <description>Git을 배워야하는 이유, Git 최초 설정 방법 그리고, Git의 관리에서 벗어나는 .gitigonre에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[Pro git 2/E study] Git basics</title>
      <link>http://jeha00.github.io/post/git/1_gitbasics/</link>
      <pubDate>Wed, 22 Jun 2022 11:31:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/1_gitbasics/</guid>
      <description>첫 번째, git 저장소 만들기. 두 번째, git add 와 git status 명령어를 통해서 Git introduction에서 알아본 git의 3가지 상태와 3가지 단계를 이해해본다.</description>
    </item>
    
    <item>
      <title>[Pro git 2/E study] What is Git ?</title>
      <link>http://jeha00.github.io/post/git/0_whatisgit/</link>
      <pubDate>Tue, 21 Jun 2022 11:31:23 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/0_whatisgit/</guid>
      <description>Git이란 무엇이고, Git이 탄생하기까지의 VCS의 histroy에 대해 간략히 알아본다. 또한, Git의 3가지 상태와 3가지 단계를 학습한다. 마지막으로 Git의 사용자 등록 방법과 화인 방법을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] DB Introduction</title>
      <link>http://jeha00.github.io/post/db/db_introduction/</link>
      <pubDate>Mon, 20 Jun 2022 23:56:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/db/db_introduction/</guid>
      <description>DB, SQL, RDBMS, NoSQL이란 각각 무엇이고, 앞으로 DB를 무엇부터 학습할지에 대한 이유를 서술했다.</description>
    </item>
    
    <item>
      <title>[TIL] Alogorithum Chapter 05: Recursive algorithum</title>
      <link>http://jeha00.github.io/post/algorithum/chapter05_%EC%9E%AC%EA%B7%80%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Fri, 10 Jun 2022 20:47:42 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/algorithum/chapter05_%EC%9E%AC%EA%B7%80%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>재귀 알고리즘(recursive algorithum)에서 재귀의 의미를 이해하여 재귀 알고리즘이란 무엇이고, 재귀 알고리즘 분석 방법 2가지와 제거하는 방법을 알아본다. 또한, 재귀 알고리즘으로 유명한 문제인 하노이의 탑, 8퀸 문제에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Alogorithum Chapter 04: Stack and Queue</title>
      <link>http://jeha00.github.io/post/algorithum/chapter04_%EC%8A%A4%ED%83%9D%EA%B3%BC%ED%81%90/</link>
      <pubDate>Tue, 07 Jun 2022 20:47:33 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/algorithum/chapter04_%EC%8A%A4%ED%83%9D%EA%B3%BC%ED%81%90/</guid>
      <description>stack과 queue에 대해 알아보고, 직접 구현하여 해당 자료 구조에 대해 알아보고, 이 두 자료구조의 차이점에 대해 이해해보자.</description>
    </item>
    
    <item>
      <title>[TIL] Alogorithum Chapter 03: Search algorithum</title>
      <link>http://jeha00.github.io/post/algorithum/chapter03_%EA%B2%80%EC%83%89%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Fri, 03 Jun 2022 20:47:08 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/algorithum/chapter03_%EA%B2%80%EC%83%89%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>검색 알고리즘의 종류인 선형 검색, 이진검색, 해쉬법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 13: 웹캐싱 기법</title>
      <link>http://jeha00.github.io/post/os/os_chapter_13_%EC%9B%B9%EC%BA%90%EC%8B%B1/</link>
      <pubDate>Tue, 31 May 2022 20:20:17 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_13_%EC%9B%B9%EC%BA%90%EC%8B%B1/</guid>
      <description>캐싱이란 무엇이고, 웹에서 사용되는 캐싱은 무엇을 목적으로 하는지, 웹캐싱이 전통적인 캐싱 기법과 무엇이 다른지, ICP는 무엇인지, 정적 웹과 동적 웹이란 무엇인지 등을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 12: 파일 시스템 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_12_%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_2/</link>
      <pubDate>Sun, 29 May 2022 18:16:18 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_12_%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_2/</guid>
      <description>Disk의 할당방식 3가지, FAT file system이란 무엇인지, disk의 빈 공간을 어떻게 관리하는지, page cache와 buffer cache와의 차이점과 마지막으로 통합 buffer cache에서의 Memory mapped 방식에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 12: 파일 시스템 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_12_%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_1/</link>
      <pubDate>Sun, 29 May 2022 18:08:02 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_12_%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_1/</guid>
      <description>file이란 무엇이고, 이 file 관리하는 system은 무엇인지, operation은 memory와 disk 사이에서 어떤 순서로 이뤄지는지,  file protection은 어떻게 이뤄지는지, 순차 접근과 직접 접근이 무엇인지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 11: 디스크 관리</title>
      <link>http://jeha00.github.io/post/os/os_chapter_11_%EB%94%94%EC%8A%A4%ED%81%AC%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Wed, 25 May 2022 13:37:20 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_11_%EB%94%94%EC%8A%A4%ED%81%AC%EA%B4%80%EB%A6%AC/</guid>
      <description>디스크의 물리적인 구조는 어떻고, 이 디스크 스케쥴링이 왜 필요하고 어떤 알고리즘들로 스케쥴링되는지, disk의 역할 2가지는 무엇인지, 다중 디스크 상황의 장점은 무엇인지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 10: 가상 메모리</title>
      <link>http://jeha00.github.io/post/os/os_chapter_10_%EA%B0%80%EC%83%81%EB%A9%94%EB%AA%A8%EB%A6%AC/</link>
      <pubDate>Mon, 23 May 2022 21:50:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_10_%EA%B0%80%EC%83%81%EB%A9%94%EB%AA%A8%EB%A6%AC/</guid>
      <description>가상 메모리를 관리하기 위한 방법으로 demanding paging에 대해 알아본다. 그리고, 페이지 교체는 어떠한 순서로 이뤄지는지, 프로세스에 프레임은 어떤 알고리즘을 통해서 할당되는지, 전역 교체와 지역교체는 무엇인지 마지막으로 thrashing 상황과 MPD 개념에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 47: Descriptor</title>
      <link>http://jeha00.github.io/post/python/python_basic_47_descriptor/</link>
      <pubDate>Thu, 19 May 2022 19:12:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_47_descriptor/</guid>
      <description>Descriptor가 무엇이고, 어떤 점들이 유용한지, 어떻게 사용하는지를 알아본다. 개념적으로 알아보므로, 나중에 더 깊이 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 46: Metaclass</title>
      <link>http://jeha00.github.io/post/python/python_basic_46_metaclass/</link>
      <pubDate>Tue, 17 May 2022 17:53:25 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_46_metaclass/</guid>
      <description>첫 번째,Type fuction을 통해서 Metaclass가 무엇인지, 그리고 class를 동적으로 만들어본다. 두 번째, Metaclass의 장점은 무엇이고, metaclass를 통해서 custom metaclass를 만들어본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 45: Overriding vs Overloading</title>
      <link>http://jeha00.github.io/post/python/python_basic_45_overriding_overloading/</link>
      <pubDate>Sun, 15 May 2022 20:26:29 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_45_overriding_overloading/</guid>
      <description>OOP에서 사용하는 overriding과 overloading에 대해 알아본다. 그리고, multipledispatch module을 사용하여 overloading을 구현한다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 44: Property</title>
      <link>http://jeha00.github.io/post/python/python_basic_44_property/</link>
      <pubDate>Thu, 12 May 2022 15:37:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_44_property/</guid>
      <description>첫 번째, method를 사용하여 getter와 setter를 구현한다. 두 번째, 첫 번째보다 pythonic way인 property를 사용하여 구현해보는데, property 방법 2가지 중 decorator를 사용하여 getter, setter, deleter를 구현해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 43: Underscore</title>
      <link>http://jeha00.github.io/post/python/python_basic_43_underscore/</link>
      <pubDate>Wed, 11 May 2022 13:27:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_43_underscore/</guid>
      <description>Python에서 underscore(_)가 어떻게 쓰이는지 알아보고, 그 중에서 Access modifier 접근 지정자 Public, Protected, private 각각에 대해 알아본다. 그리고, Private의 경우, naming mangling와 연결하여 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 09: 교착 상태</title>
      <link>http://jeha00.github.io/post/os/os_chapter_09_%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C/</link>
      <pubDate>Tue, 10 May 2022 20:38:17 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_09_%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C/</guid>
      <description>교착 상태(deadlock)이란 무엇이고, deadlock 발생 조건 4가지는 무엇이며, 이에 따라 deadlock 처리 방법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 08: 프로세스 동기화 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_2/</link>
      <pubDate>Tue, 10 May 2022 20:38:04 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_2/</guid>
      <description>프로세스 동기화의 전통적인 문제 3가지와 semaphore를 개선한 방법인 monitor에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 08: 프로세스 동기화 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_1/</link>
      <pubDate>Wed, 04 May 2022 20:53:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_1/</guid>
      <description>Race condition이란 무엇이고, 이 race condition은 OS에서 언제 발생되며, 이를 해결하기 위한 방법으로 SW 방법과 SW 방법에는 무엇이 있는지를 배운다. 또한, Semaphore가 무엇인지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 07: 메모리 관리 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_2/</link>
      <pubDate>Thu, 28 Apr 2022 16:13:57 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_2/</guid>
      <description>불연속 할당 방법인 pagin 기법, segmentation 기법, paged segmentation 기법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 07: 메모리 관리 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_1/</link>
      <pubDate>Thu, 28 Apr 2022 16:13:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_1/</guid>
      <description>logical address와 physical address를 어떻게 mapping하는지, 메모리 관리와 관련된 용어 4가지에 대해 알아보고, 물리적 메모리의 할당 방식 연속할당과 불연속할당 방식 중 연속할당에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 06: CPU scheduling</title>
      <link>http://jeha00.github.io/post/os/os_chapter_06_cpu_scheduling/</link>
      <pubDate>Fri, 22 Apr 2022 18:50:51 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_06_cpu_scheduling/</guid>
      <description>Bound process를 중심으로 CPU 스케쥴러가 왜 필요한지, 스케쥴링의 성능 척도는 무엇인지, CPU sheduling 알고리즘의 종류에는 무엇이 있고, 이 알고리즘 평가는 어떻게 이뤄지는지 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 05: 프로세스 관리</title>
      <link>http://jeha00.github.io/post/os/os_chapter_05_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Mon, 18 Apr 2022 23:25:25 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_05_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EA%B4%80%EB%A6%AC/</guid>
      <description>프로세스란 무엇인지, 프로세스의 상태는 어떻게 흘러가는지, 문맥 교환이란 무엇인지, 프로세스가 어떻게 생성되고 종료되는지, 프로세스끼리 협력은 어떻게 하는지, thread는 무엇인지 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 04: 프로그램의 구조와 실행</title>
      <link>http://jeha00.github.io/post/os/os_chapter_04_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98%EA%B5%AC%EC%A1%B0%EC%99%80%EC%8B%A4%ED%96%89/</link>
      <pubDate>Fri, 15 Apr 2022 00:27:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_04_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98%EA%B5%AC%EC%A1%B0%EC%99%80%EC%8B%A4%ED%96%89/</guid>
      <description>프로그램의 구조와 실행에 대해 설명한다. 예를 들어 프로그램의 주소영역, PCB, Program counter, 일반 명령과 특권 명령, Virtual memory, kernel mode와 user mode 등등을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 03: 컴퓨터 시스템의 동작원리 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_2/</link>
      <pubDate>Thu, 14 Apr 2022 14:54:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_2/</guid>
      <description>입출력 구조, DMA, 저장장치의 구조 그리고 계층구조에 대해 알아본다. 또한, 하드웨어, 메모리, CPU의 각 보안 방법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 03: 컴퓨터 시스템의 동작원리 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_1/</link>
      <pubDate>Wed, 13 Apr 2022 13:55:26 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_1/</guid>
      <description>I/O 연산이 무엇이고, controller와 local buffer가 무엇이고, 입출력 연산이 Interrupt를 중심으로 어떻게 진행되는지를 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 42: Context manager</title>
      <link>http://jeha00.github.io/post/python/python_basic_42_contextmanager/</link>
      <pubDate>Tue, 12 Apr 2022 13:09:09 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_42_contextmanager/</guid>
      <description>context manager가 무엇이고, 이를 with, class, decorator를 사용하여 여러 방법으로 구현해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 41: Shallow copy &amp; Deep copy</title>
      <link>http://jeha00.github.io/post/python/python_basic_41_shallowdeepcopy/</link>
      <pubDate>Mon, 11 Apr 2022 20:18:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_41_shallowdeepcopy/</guid>
      <description>Shallow copy 와 Deep copy가 각각 무엇이고, 무슨 차이인지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 40: Call by object reference</title>
      <link>http://jeha00.github.io/post/python/python_basic_40_callbyobjectreference/</link>
      <pubDate>Sun, 10 Apr 2022 15:54:18 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_40_callbyobjectreference/</guid>
      <description>python의 변수를 만드는 원리인 object reference에 대해 알아보고, 파이썬의 호출 방식인 call by object reference에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 39: Map, Filter, Reduce</title>
      <link>http://jeha00.github.io/post/python/python_basic_39_mapfilterreduce/</link>
      <pubDate>Sat, 09 Apr 2022 14:45:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_39_mapfilterreduce/</guid>
      <description>High-order function의 대표적인 예인 map, filter, reduce에 대해 lambda, def, closure로 구현해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 38: Futures</title>
      <link>http://jeha00.github.io/post/python/python_basic_38.futures/</link>
      <pubDate>Wed, 06 Apr 2022 21:34:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_38.futures/</guid>
      <description>인프런 파이썬 level 4 과정의 기반으로 대략적으로 학습하는 내용이다. 구체적으로 Synchro와 Asynchro가 각각 무엇을 의미하는지, threadpool이란 무엇인지, concurrent.futures package에서 wait과 as_completed module에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 02: Introduction to Operating System</title>
      <link>http://jeha00.github.io/post/os/os_chapter_02_%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C_%EA%B0%9C%EC%9A%94/</link>
      <pubDate>Tue, 05 Apr 2022 17:43:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_02_%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C_%EA%B0%9C%EC%9A%94/</guid>
      <description>운영체제란 무엇이고, 무슨 역할을 하는지, 어떻게 분류되는지, 그리고 CPU, 메모리, 입출력 장치의 대략적인 관리 mechanism에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 37: Coroutine</title>
      <link>http://jeha00.github.io/post/python/python_basic_37_coroutine/</link>
      <pubDate>Sat, 02 Apr 2022 21:15:33 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_37_coroutine/</guid>
      <description>첫 번째, Thread, Multi-thread 그리고 Coroutine이 무엇인지 알아보면서, coroutine이 왜 중요한지를 이해한다. 두 번째, Coroutine을 구현해보면서 Generator와의 차이를 통해 Coroutine을 이해한다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 36: Generator</title>
      <link>http://jeha00.github.io/post/python/python_basic_36_generator/</link>
      <pubDate>Fri, 01 Apr 2022 19:57:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_36_generator/</guid>
      <description>Generator 1에 이어서 본격적으로 Generator에 대해 알아본다. 그리고, Generator와 관련된 중요 함수들도 알아본다.</description>
    </item>
    
    <item>
      <title>Dev-Contents</title>
      <link>http://jeha00.github.io/post/dev-contents/dev-contents/</link>
      <pubDate>Thu, 31 Mar 2022 22:09:06 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/dev-contents/dev-contents/</guid>
      <description>Updated on June 17   /  개발 관련 좋은 컨텐츠를 보관하고 섭취하기</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 35: 
_
_iter
_
_과 
_
_next
_
_</title>
      <link>http://jeha00.github.io/post/python/python_basic_35_iter_next/</link>
      <pubDate>Wed, 30 Mar 2022 14:17:57 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_35_iter_next/</guid>
      <description>첫 번째, 병행성과 병렬성이란 무엇인지 각 개념에 대해 알아본다.  두 번째, Generator를 이해하기 위해 __iter__와 __next__에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 34: Decorator</title>
      <link>http://jeha00.github.io/post/python/python_basic_34_decorator/</link>
      <pubDate>Tue, 29 Mar 2022 23:34:52 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_34_decorator/</guid>
      <description>Decorator(데코레이터)가 왜 중요한지, 왜 사용해야 하는지 그리고 작성하기 어려운 지에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 33: Closure</title>
      <link>http://jeha00.github.io/post/python/python_basic_33_closure/</link>
      <pubDate>Mon, 28 Mar 2022 23:38:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_33_closure/</guid>
      <description>Closure를 설명하기 위해서 global variable, local variable에 추가하여 free variable에 대해 설명하고, 왜 closure가 필요한지, closure의 잘못된 사용법을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 32: LEGB rules and Memory structures</title>
      <link>http://jeha00.github.io/post/python/python_basic_32_legb_rules/</link>
      <pubDate>Sun, 27 Mar 2022 23:53:06 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_32_legb_rules/</guid>
      <description>LEGB rules 즉 Local, Enclosing, global(or module), built-in varialbe의 scope에 대해 알아본다. 그리고, Python Memory structure가 어떤지 개괄적으로 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 31: First-class</title>
      <link>http://jeha00.github.io/post/python/python_basic_31_firstclass/</link>
      <pubDate>Fri, 25 Mar 2022 20:42:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_31_firstclass/</guid>
      <description>일급 함수(일급 객체, first-class)란 무엇인지 알고, 일급 함수의 예인 lambda function, Callable, Partial에 대해 알아본다.  그리고 추가적으로 Signature에 대해 간단히 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 30: Sort VS Sorted</title>
      <link>http://jeha00.github.io/post/python/python_basic_30_sortvssorted_array/</link>
      <pubDate>Thu, 24 Mar 2022 23:01:10 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_30_sortvssorted_array/</guid>
      <description>sort와 sorted의 차이를 알아보고, Array data type 에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 29: Data Model</title>
      <link>http://jeha00.github.io/post/python/python_basic_29_datamodel/</link>
      <pubDate>Wed, 23 Mar 2022 23:24:24 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_29_datamodel/</guid>
      <description>Python data model을 상세히 분류하여 mutable과 immutable의 차이가 무엇인지,  list comprehension이 무엇인지, unpacking을 tuple에 어떻게 구현하는지, immutable dictionary와 set에 대해 조금 더 깊이 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 28: Namedtuple</title>
      <link>http://jeha00.github.io/post/python/python_basic_28_namedtuple/</link>
      <pubDate>Tue, 22 Mar 2022 09:00:37 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_28_namedtuple/</guid>
      <description>Data Model의 한 종류인 namedtuple에 대해 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 27: Special Method</title>
      <link>http://jeha00.github.io/post/python/python_basic_27_specialmethod/</link>
      <pubDate>Mon, 21 Mar 2022 17:14:36 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_27_specialmethod/</guid>
      <description>지난 번 Python basic 26 Class advanced에 이어서 class 안에 정의되는 built-in method인 special method에 대해 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP Header 2</title>
      <link>http://jeha00.github.io/post/network/network_http_8/</link>
      <pubDate>Fri, 18 Mar 2022 21:51:01 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_8/</guid>
      <description>검증 헤더와 조건부 요청 헤더의 종류, 그중 캐시 관련 헤더에 대해서 알아본다. 그리고, 프록시 서버와 원(Origin) 서버의 차이와 캐시를 어떻게 무효화하는지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP Header 1</title>
      <link>http://jeha00.github.io/post/network/network_http_7/</link>
      <pubDate>Thu, 17 Mar 2022 20:17:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_7/</guid>
      <description>representation, 콘텐츠 협상, 전송 방식, 일반 정보, 특별 정보, 인증 그리고 쿠키에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 26: class advanced</title>
      <link>http://jeha00.github.io/post/python/python_basic_26_class2/</link>
      <pubDate>Wed, 16 Mar 2022 14:28:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_26_class2/</guid>
      <description>Python basic 14의 내용을 이어서 진행한다. instance의 self가 무엇을 의미하는지, dir과 &lt;code&gt;__dict__&lt;/code&gt;가 무슨 차이인지, 또한 method 3종류인 class method, instance method 마지막으로 static method에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP status</title>
      <link>http://jeha00.github.io/post/network/network_http_6/</link>
      <pubDate>Tue, 15 Mar 2022 10:14:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_6/</guid>
      <description>HTTP status 2xx, 3xx, 4xx, 5xx에 대해 각각 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP method use</title>
      <link>http://jeha00.github.io/post/network/network_http_5/</link>
      <pubDate>Mon, 14 Mar 2022 21:41:29 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_5/</guid>
      <description>HTTP method를 가지고 클라이언트가 서버에 어떻게 데이터를 전송하는지, 그리고 API 설계에는 무슨 종류가 있는지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 25: 
_
_str
_
_ vs 
_
_repr
_
_</title>
      <link>http://jeha00.github.io/post/python/python_basic_25_str_repr/</link>
      <pubDate>Sun, 13 Mar 2022 16:33:19 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_25_str_repr/</guid>
      <description>__str__ 과 __repr__ 이 각각 무엇인지, 이 둘의 차이는 무엇인지, print 함수와 __str__ 사이에는 무슨 관계가 있는지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 24: Procedural Programming vs OOP</title>
      <link>http://jeha00.github.io/post/python/python_basic_24_oop/</link>
      <pubDate>Sat, 12 Mar 2022 23:16:27 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_24_oop/</guid>
      <description>절차형 프로그래밍과 객체지향 프로그래밍 각 방식으로 작성하여 직접 차이를 느껴본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 23:  if 
_
_name
_
_ == &#39;
_
_main
_
_&#39;</title>
      <link>http://jeha00.github.io/post/python/python_basic_23_ifnamemain/</link>
      <pubDate>Fri, 11 Mar 2022 20:33:01 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_23_ifnamemain/</guid>
      <description>&#39;
_
_name
_
_&amp;rsquo; 과 &#39;
_
_main
_
_&amp;rsquo; 를 이해한 걸 바탕으로, if
_
_name
_
_ == &#39;
_
_main
_
_&amp;rsquo; 에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP method</title>
      <link>http://jeha00.github.io/post/network/network_http_4/</link>
      <pubDate>Thu, 10 Mar 2022 20:32:24 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_4/</guid>
      <description>HTTP method인 GET, POST, PUT, PATCH, DELETE 그리고 속성에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP basic</title>
      <link>http://jeha00.github.io/post/network/network_http_3/</link>
      <pubDate>Wed, 09 Mar 2022 17:56:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_3/</guid>
      <description>HTTP란 무엇이고, HTTP의 특징인 클라이언트 서버 구조, stateless, connectionless, HTTP mesage에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP intro. 2: URI 와 웹 브라우저 요청 흐름</title>
      <link>http://jeha00.github.io/post/network/network_http_2/</link>
      <pubDate>Tue, 08 Mar 2022 11:50:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_2/</guid>
      <description>URI, URL, URN 에 대해 알아보고, 웹 브라우저의 요청 흐름에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP intro. 1: Internet network</title>
      <link>http://jeha00.github.io/post/network/network_http_1/</link>
      <pubDate>Mon, 07 Mar 2022 21:16:44 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_1/</guid>
      <description>HTTP를 학습하기 위해 사전지식으로 IP,TCP/UDP, PORT, DNS를 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 22: NoneTypeError</title>
      <link>http://jeha00.github.io/post/python/python_basic_22_nonetypeerror/</link>
      <pubDate>Sat, 05 Mar 2022 23:47:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_22_nonetypeerror/</guid>
      <description>Python basic 과정을 마치고, 간단한 프로젝트로 Hangman game을 만들었다. 그 과정에서 NoneTypeError가 발생했다. &amp;lsquo;TypeError:&amp;lsquo;NoneType&amp;rsquo; object is not subscriptable&amp;rsquo; 에 대해 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 21: csv.read, write</title>
      <link>http://jeha00.github.io/post/python/python_basic_21_filereadwrite_2/</link>
      <pubDate>Fri, 04 Mar 2022 14:31:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_21_filereadwrite_2/</guid>
      <description>with open() as 를 사용하여 외부 csv 파일을 읽고, 쓰는 방법을 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 20: with open as</title>
      <link>http://jeha00.github.io/post/python/python_basic_20_filewriteread_1/</link>
      <pubDate>Fri, 04 Mar 2022 14:30:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_20_filewriteread_1/</guid>
      <description>with open() as 함수를 사용해서 외부 파일을 읽고, 작성하는 방법을 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 19: external functions</title>
      <link>http://jeha00.github.io/post/python/python_basic_19_external_functions/</link>
      <pubDate>Thu, 03 Mar 2022 01:34:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_19_external_functions/</guid>
      <description>외장 함수를 실행하는 방법과 외장 함수의 여러 종류들을 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 18: built-in functions</title>
      <link>http://jeha00.github.io/post/python/python_basic_18_built_in_fuctions/</link>
      <pubDate>Thu, 03 Mar 2022 01:33:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_18_built_in_fuctions/</guid>
      <description>내장 함수란 무엇이고, 내장 함수에서 자주 사용된 것들로 실습을 해보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 17: try ~ exception</title>
      <link>http://jeha00.github.io/post/python/python_basic_17_try_exception/</link>
      <pubDate>Thu, 03 Mar 2022 01:33:28 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_17_try_exception/</guid>
      <description>Error의 종류와 예외 처리문에 대해 알아보고, 일부러 에러를 일으키는 이유와 방법에 대해 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 16: package</title>
      <link>http://jeha00.github.io/post/python/python_basic_16_package/</link>
      <pubDate>Thu, 03 Mar 2022 01:32:28 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_16_package/</guid>
      <description>package란 무엇인지, package의 경로와 함수를 어떻게 실행하는지, &lt;strong&gt;init&lt;/strong&gt;.py가 존재하는 이유에 대해 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 15: module</title>
      <link>http://jeha00.github.io/post/python/python_basic_15_module/</link>
      <pubDate>Wed, 02 Mar 2022 00:51:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_15_module/</guid>
      <description>Module이란 무엇인지, Module을 어떻게 사용하는지, Module 관련 함수에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 14: class</title>
      <link>http://jeha00.github.io/post/python/python_basic_14_class/</link>
      <pubDate>Wed, 02 Mar 2022 00:51:20 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_14_class/</guid>
      <description>OOP의 의미가 무엇인지, Class와 Instance의 차이가 무엇인지, self가 무엇을 의미하는지, class variable과 instance variable에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 13: input</title>
      <link>http://jeha00.github.io/post/python/python_basic_13_input/</link>
      <pubDate>Wed, 02 Mar 2022 00:51:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_13_input/</guid>
      <description>input을 통한 사용자 입력과 형 변환(type conversion) 입력을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 12: function과 Method</title>
      <link>http://jeha00.github.io/post/python/python_basic_12_method/</link>
      <pubDate>Wed, 02 Mar 2022 00:50:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_12_method/</guid>
      <description>함수의 중요성 및 선언, Packing &amp;amp; Unpacking, 중첩 함수(Nested function), 람바 함사(익명 함수), 함수 Type hint인 annotation 에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 11: 흐름 제어문 (while 반복문)</title>
      <link>http://jeha00.github.io/post/python/python_basic_11_while/</link>
      <pubDate>Wed, 02 Mar 2022 00:49:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_11_while/</guid>
      <description>While 반복문의 기본 사용법, break &amp;amp; continue 문, While ~ else 구문, 무한 반복 구문에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 10: 흐름 제어문 (for 반복문)</title>
      <link>http://jeha00.github.io/post/python/python_basic_10_for/</link>
      <pubDate>Tue, 01 Mar 2022 11:53:00 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_10_for/</guid>
      <description>for ~ range의 3가지 pattern, for문에 interable 자료형 활용하기, break 문과 continue 문 사용하기, for ~ else 구문에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 9: 흐름 제어문 (if 조건문)</title>
      <link>http://jeha00.github.io/post/python/python_basic_9_if/</link>
      <pubDate>Tue, 01 Mar 2022 11:52:55 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_9_if/</guid>
      <description>조건문의 기본 형식, 연산자를 통해서 제어하는 방법, 참거짓을 의미하는 값들, 다중 및 중첩 조건문, in &amp;amp; not in 으로 제어하는 방법을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 8: set</title>
      <link>http://jeha00.github.io/post/python/python_basic_8_set/</link>
      <pubDate>Tue, 01 Mar 2022 11:52:52 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_8_set/</guid>
      <description>set 선언법, set type conversion, 집합 자료형 활용을 위한 함수, set type의 수정하기를 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 7: dictionary </title>
      <link>http://jeha00.github.io/post/python/python_basic_7_dictionary/</link>
      <pubDate>Tue, 01 Mar 2022 11:52:48 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_7_dictionary/</guid>
      <description>dictionary type의 선언, 출력과 수정 그리고, dictionary에 사용되는 함수에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 6: tuple</title>
      <link>http://jeha00.github.io/post/python/python_basic_6_tuple/</link>
      <pubDate>Tue, 01 Mar 2022 11:52:41 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_6_tuple/</guid>
      <description>list와 tuple의 차이. tuple의 indexing, slicing, 연산. 그리고, tuple의 중요한 특징 중 하나인 packing &amp;amp; unpacking에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 5: list</title>
      <link>http://jeha00.github.io/post/python/python_basic_5_list/</link>
      <pubDate>Mon, 28 Feb 2022 19:49:04 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_5_list/</guid>
      <description>list의 생성, indexing, slicing, 연산, list에 쓰이는 함수 그리고, list를 수정하고 삭제하는 방법에 대해 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 4: string</title>
      <link>http://jeha00.github.io/post/python/python_basic_4_string/</link>
      <pubDate>Mon, 28 Feb 2022 19:45:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_4_string/</guid>
      <description>string type의 생성부터 연산, len 함수 사용, type conversion, 문자형 함수 그리고 slicing을 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 3: numeric data</title>
      <link>http://jeha00.github.io/post/python/python_basic_3_numericdata/</link>
      <pubDate>Mon, 28 Feb 2022 18:51:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_3_numericdata/</guid>
      <description>첫 번째, python의 자료형 종류에는 무엇이 있는지 알아본다. 두 번째, 숫자형 데이터 타입의 선언, 연산, 그리고 형 변환에 대해 중점적으로 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 2: print 사용법</title>
      <link>http://jeha00.github.io/post/python/python_basic_2_print/</link>
      <pubDate>Mon, 28 Feb 2022 18:50:13 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_2_print/</guid>
      <description>첫 번째 print 함수를 사용할 때, separator와 end를 사용하여 다양하게 사용하는 것과 두 번째, stirng type, numeric type을 다양하게 출력을 해봄으로서 print 함수에 대해 이해해보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] Python basic 1: 변수 선언</title>
      <link>http://jeha00.github.io/post/python/python_basic_1/</link>
      <pubDate>Mon, 28 Feb 2022 18:47:51 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/python/python_basic_1/</guid>
      <description>첫 번째, 기본적인 선언 방법과 동시 선언, 재선언을 알아본다. 두 번째, 각 선언에 따른 id 값을 확인하여 파이썬 내부 원리를 이해한다. 세 번째, 선언 방법의 종류인 Camel case, Pascal case, Snake case가 무엇인지 알아본다.</description>
    </item>
    
    <item>
      <title>Window에서 Hugo로 Github page 만들고 배포하기</title>
      <link>http://jeha00.github.io/post/dev-contents/hugo%EB%A1%9C-github-page-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 17 Feb 2022 21:49:13 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/dev-contents/hugo%EB%A1%9C-github-page-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/</guid>
      <description>SSG의 한 종류 &amp;lsquo;Hugo&amp;rsquo;와 &amp;lsquo;git remote, git submodule&amp;rsquo;로 Github page를 만든다. 그 후, 컨텐츠 생성과 업로드를 한다. 마지막으로 utterances로 댓글 기능 추가, deploy.sh를 사용하여 업로드하는 방법을 다룬다.</description>
    </item>
    
    
    
  </channel>
</rss>
