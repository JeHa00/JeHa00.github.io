<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jeha00 DevLog</title>
    <link>http://jeha00.github.io/</link>
    <description>Recent content on Jeha00 DevLog</description>
    <image>
      <url>http://jeha00.github.io/47</url>
      <link>http://jeha00.github.io/47</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 21 Jul 2022 18:24:57 +0900</lastBuildDate><atom:link href="http://jeha00.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[TIL] HTML &amp; CSS study - CSS 01</title>
      <link>http://jeha00.github.io/post/html_css/study02/</link>
      <pubDate>Thu, 21 Jul 2022 18:24:57 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/html_css/study02/</guid>
      <description>CSS 입력방식인 inline과 external 방식이 각각 무엇인지, css 속성값을 입력하는 방식과 html tag의 속성인 id, class를 사용하여 css 속성 값을 입력하는 방식을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 12 - Gitmoji &amp; git submodules</title>
      <link>http://jeha00.github.io/post/git/lec_chapter12/</link>
      <pubDate>Wed, 20 Jul 2022 21:21:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter12/</guid>
      <description>hook을 사용하여 gitmoji 를 사용하는 방법을 학습하나 후, submodule이란 무엇이고 어떠한 장점이 있는지를 학습한다. 그리고, git submodule 명령어를 통해 submodule 연결을 해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 11 - Git bisect</title>
      <link>http://jeha00.github.io/post/git/lec_chapter11-04/</link>
      <pubDate>Tue, 19 Jul 2022 21:12:20 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter11-04/</guid>
      <description>git bisect 명령어를 통해서 이진 탐색과 commit hash number를 이용하여 오류 지점을 찾아본다.</description>
    </item>
    
    <item>
      <title>[TIL] HTML &amp; CSS study - HTML이란?</title>
      <link>http://jeha00.github.io/post/html_css/study01/</link>
      <pubDate>Mon, 18 Jul 2022 18:24:51 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/html_css/study01/</guid>
      <description>HTML, CSS가 무엇이고, 브라우저에서 무슨 역할을 하는지, html의 tag란 무엇인지, semantic tag과 non-semantic tag란 무엇인지 학습한다. 그리고, tag의 다양한 속성 중 몇 가지를 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 11 - Git blame &amp; GitLens</title>
      <link>http://jeha00.github.io/post/git/lec_chapter11-03/</link>
      <pubDate>Mon, 18 Jul 2022 15:16:52 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter11-03/</guid>
      <description>git blame 명령어와 VSC의 extension program인 GitLens를 통해 각 라인의 작성자를 확인하는 법을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 11 - Git diff</title>
      <link>http://jeha00.github.io/post/git/lec_chapter11-02/</link>
      <pubDate>Sun, 17 Jul 2022 19:14:40 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter11-02/</guid>
      <description>git diff 명령어를 통해서 현재 파일들의 변경사항, staging area에 올라간 파일들의 변경사항, 브랜치 간의 변경사항, 커밋 간의 변경사항들 여러 관계 사이의 변경사항을 알 수 있다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 11 - Git log 자세히 알아보기</title>
      <link>http://jeha00.github.io/post/git/lec_chapter11-01/</link>
      <pubDate>Fri, 15 Jul 2022 15:07:17 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter11-01/</guid>
      <description>git log에 달려있는 여러 옵션들을 사용하여 log를 더 자세히 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - Gitflow</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-05/</link>
      <pubDate>Thu, 14 Jul 2022 13:00:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-05/</guid>
      <description>협업 시 여러 branch를 생성하여 어떻게 활용하는지, 각 branch의 이름은 현업에서 주로 사용되는 이름이 있는지 Gitflow를 사용한 브랜치 활용법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - git merge --squash</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-04/</link>
      <pubDate>Wed, 13 Jul 2022 13:00:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-04/</guid>
      <description>git merge &amp;ndash;squash 명령어를 사용해서 다른 브랜치의 여러 커밋들을 rebase와 달리 하나의 커밋으로 묶어서 가져와본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - git rebase --onto</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-03/</link>
      <pubDate>Tue, 12 Jul 2022 23:31:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-03/</guid>
      <description>git rebase &amp;ndash;onto 명령어를 사용하여 다른 브랜치에서 파생된 브랜치를 현재 브랜치로 옮겨서 붙여본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - git cherry-pick</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-02/</link>
      <pubDate>Mon, 11 Jul 2022 23:31:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-02/</guid>
      <description>git cherry-pick 명령어를 사용하여 다른 브랜치에 있는 원하는 commit만 따오는 실습을 해본다.</description>
    </item>
    
    <item>
      <title>Django study: Document tutorial Part 4 따라해보기</title>
      <link>http://jeha00.github.io/post/django/doc_tutorial_04/</link>
      <pubDate>Fri, 08 Jul 2022 23:46:04 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/doc_tutorial_04/</guid>
      <description>0. Introduction   Write a minimal form use generic views: Less code is better     django 공식 문서를 번역하는 작업을 통해 튜토리얼을 진행하여 이해해본다.
  이번 tutorial을 통해서 기본적인 설문조사 애플리케이션을 만들 수 있다.
 이 애플리케이션은 다음 2가지로 구성된다.  사람들이 설문조사를 보고 투표할 수 있는 &amp;lsquo;public site&amp;rsquo; 설문조사를 더하고, 수정하고, 삭제하는 &amp;lsquo;admin site&amp;rsquo;       1. Write a minimal form  Par03에서 만들었던 detail template을 업데이트해보자.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 10 - Fast forwad vs 3-way merge</title>
      <link>http://jeha00.github.io/post/git/lec_chapter10-01/</link>
      <pubDate>Fri, 08 Jul 2022 23:31:47 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter10-01/</guid>
      <description>git의 merge 원리인 Fast-forward와 3-way merge에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 08 - git reflog</title>
      <link>http://jeha00.github.io/post/git/lec_chapter08-03/</link>
      <pubDate>Thu, 07 Jul 2022 23:31:37 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter08-03/</guid>
      <description>git reset 으로 사라진 커밋을 복구하기 위해서 git reflog 명령어를 통해 더 자세한 commit 번호를 확인 후, git reset &amp;ndash;hard 명령어를 통해서 사라진 커밋을 복구해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 08 - git restore</title>
      <link>http://jeha00.github.io/post/git/lec_chapter08-02/</link>
      <pubDate>Wed, 06 Jul 2022 23:31:33 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter08-02/</guid>
      <description>git restore 명령어를 통해서 첫 번째, 특정 파일을 지정된 상태로 복구해보는 것과 두 번째, 변경 상태를 stage area에서 working directory로 돌려보는 것을 해본다.</description>
    </item>
    
    <item>
      <title>Django study: Document tutorial Part 2 따라해보기</title>
      <link>http://jeha00.github.io/post/django/doc_tutorial_02/</link>
      <pubDate>Tue, 05 Jul 2022 23:45:49 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/doc_tutorial_02/</guid>
      <description>class를 사용하여 model을 만들면서 Field를 적용해본다. application을 활성화하기 위해 settings.py에 INSTALLED_APPS 에 등록한다. 그리고, migration file을 만든 후, DB에 적용해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 08 - git clean</title>
      <link>http://jeha00.github.io/post/git/lec_chapter08-01/</link>
      <pubDate>Mon, 04 Jul 2022 23:31:28 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter08-01/</guid>
      <description>이번 단원에서는 git에 추적되지 않는 즉, 관리되지 않은 파일들을 삭제하는 &amp;lsquo;git clean&amp;rsquo;에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>Django study: Document tutorial Part 1 따라해보기</title>
      <link>http://jeha00.github.io/post/django/doc_tutorial_01/</link>
      <pubDate>Sun, 03 Jul 2022 23:45:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/django/doc_tutorial_01/</guid>
      <description>django를 설치한 후, project와 application을 명령어를 통해 만들어보고, view와 URLconf에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 09 - git tag</title>
      <link>http://jeha00.github.io/post/git/lec_chpater09/</link>
      <pubDate>Fri, 01 Jul 2022 20:59:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chpater09/</guid>
      <description>v0.0.0 에서 각 자리가 무엇을 의미하는지, commit에 tag를 다는 명령어인 git tag, 그리고 여러 버전들 중 일부를 release하는 것을 배운다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 07 -  git stash &amp; git commit --amend &amp; git rebase -i</title>
      <link>http://jeha00.github.io/post/git/lec_chapter07-030405/</link>
      <pubDate>Thu, 30 Jun 2022 20:59:37 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter07-030405/</guid>
      <description>커밋하기 애매한 변화를 치워두는 명령어인 git stash, commit message를 수정하는 git commit &amp;ndash;amend, commit 과거 내역들을 수정하는 git rebase -i 를 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 07 - git add -p &amp; git commit -v</title>
      <link>http://jeha00.github.io/post/git/lec_chapter07-02/</link>
      <pubDate>Tue, 28 Jun 2022 17:44:10 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter07-02/</guid>
      <description>변경사항을 보다 쪼갠 hunk 크기로 나눠 staging area에 올리는 명령어인 git add -p 와 커밋하는 명령어인 git commit -v 에 대해 학습해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 07 - Commit message 권장사항과 convention </title>
      <link>http://jeha00.github.io/post/git/lec_chapter07-01/</link>
      <pubDate>Tue, 28 Jun 2022 17:44:03 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter07-01/</guid>
      <description>commit message를 작성할 때 권장사항들과 commit message convention에 대해 학습하여 commit message를 보다 체계적으로 작성해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 06 - git help &amp; git config</title>
      <link>http://jeha00.github.io/post/git/lec_chapter06/</link>
      <pubDate>Tue, 28 Jun 2022 17:37:08 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter06/</guid>
      <description>git 명령어가 기억나지 않아 설명서가 필요한 경우 사용하는 &lt;code&gt;git help&lt;/code&gt; 명령어와 &lt;code&gt;git config&lt;/code&gt;를 사용한 git 설정에 대해 자세히 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 05 - deep dive</title>
      <link>http://jeha00.github.io/post/git/lec_chapter05/</link>
      <pubDate>Mon, 27 Jun 2022 21:39:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter05/</guid>
      <description>첫 번째, Git의 장점. 두 번째, Git의 3가지 공간. 세 번째, git rm과 git mv 명령어. 네 번째, reset의 3가지 옵션. 다섯 번째, Git의 HEAD를 이동하기 위해서 git checkout 명령어. 마지막으로 fetch와 pull의 차이를 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 04 - 원격 사용하기</title>
      <link>http://jeha00.github.io/post/git/lec_chapter04/</link>
      <pubDate>Mon, 27 Jun 2022 11:29:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter04/</guid>
      <description>GitHub에 원격 저장소를 만들고, 원격과 로컬에서 branch를 새롭게 만들어보면서 원격 저장소로부터 pull, push를 사용하여 프로젝트를 동기화 해본다. 마지막으로 이 과정을 소스트리로 실행해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 03 - branch</title>
      <link>http://jeha00.github.io/post/git/lec_chapter03/</link>
      <pubDate>Fri, 24 Jun 2022 14:25:18 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter03/</guid>
      <description>branch를 만든 후, 다른 branch로 이동해본다. 또한, 각 branch끼리 합치는 git merge와 git rebase를 실행하면서 CLI 와 Source tree로 branch 변화를 시각적으로 확인해본다. 마지막으로 병합 시 충돌을 해결해본다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 02 - resest vs revert</title>
      <link>http://jeha00.github.io/post/git/lec_chapter02/</link>
      <pubDate>Thu, 23 Jun 2022 11:33:57 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter02/</guid>
      <description>git add 와  git commit 으로 변경사항을 stage에 올리고, 저장해본다. 이 과정에서 vim의 몇 가지 명령어를 알아본다.  git reset &amp;ndash;hard / git revert 를 학습하여 과거 시점으로 돌아가는 걸 학습한다.</description>
    </item>
    
    <item>
      <title>[TIL] Git study: Lecture Chapter 01</title>
      <link>http://jeha00.github.io/post/git/lec_chapter01/</link>
      <pubDate>Wed, 22 Jun 2022 11:33:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/lec_chapter01/</guid>
      <description>Git을 배워야하는 이유와 Git의 관리에서 벗어나도록 하는 .gitigonre에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[Pro git 2/E study] Git basics</title>
      <link>http://jeha00.github.io/post/git/1_gitbasics/</link>
      <pubDate>Wed, 22 Jun 2022 11:31:54 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/1_gitbasics/</guid>
      <description>첫 번째, git 저장소 만들기. 두 번째, git add 와 git status 명령어를 통해서 Git introduction에서 알아본 git의 3가지 상태와 3가지 단계를 이해해본다.</description>
    </item>
    
    <item>
      <title>[Pro git 2/E study] What is Git ?</title>
      <link>http://jeha00.github.io/post/git/0_whatisgit/</link>
      <pubDate>Tue, 21 Jun 2022 11:31:23 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/git/0_whatisgit/</guid>
      <description>Git이란 무엇이고, Git이 탄생하기까지의 VCS의 histroy에 대해 간략히 알아본다. 또한, Git의 3가지 상태와 3가지 단계를 학습한다. 마지막으로 Git의 사용자 등록 방법과 화인 방법을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] DB Introduction</title>
      <link>http://jeha00.github.io/post/db/db_introduction/</link>
      <pubDate>Mon, 20 Jun 2022 23:56:43 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/db/db_introduction/</guid>
      <description>DB, SQL, RDBMS, NoSQL이란 각각 무엇이고, 앞으로 DB를 무엇부터 학습할지에 대한 이유를 서술했다.</description>
    </item>
    
    <item>
      <title>[TIL] Alogorithum Chapter 05: Recursive algorithum</title>
      <link>http://jeha00.github.io/post/algorithum/chapter05_%EC%9E%AC%EA%B7%80%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Fri, 10 Jun 2022 20:47:42 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/algorithum/chapter05_%EC%9E%AC%EA%B7%80%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>재귀 알고리즘(recursive algorithum)에서 재귀의 의미를 이해하여 재귀 알고리즘이란 무엇이고, 재귀 알고리즘 분석 방법 2가지와 제거하는 방법을 알아본다. 또한, 재귀 알고리즘으로 유명한 문제인 하노이의 탑, 8퀸 문제에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Alogorithum Chapter 04: Stack and Queue</title>
      <link>http://jeha00.github.io/post/algorithum/chapter04_%EC%8A%A4%ED%83%9D%EA%B3%BC%ED%81%90/</link>
      <pubDate>Tue, 07 Jun 2022 20:47:33 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/algorithum/chapter04_%EC%8A%A4%ED%83%9D%EA%B3%BC%ED%81%90/</guid>
      <description>stack과 queue에 대해 알아보고, 직접 구현하여 해당 자료 구조에 대해 알아보고, 이 두 자료구조의 차이점에 대해 이해해보자.</description>
    </item>
    
    <item>
      <title>[TIL] Alogorithum Chapter 03: Search algorithum</title>
      <link>http://jeha00.github.io/post/algorithum/chapter03_%EA%B2%80%EC%83%89%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Fri, 03 Jun 2022 20:47:08 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/algorithum/chapter03_%EA%B2%80%EC%83%89%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>검색 알고리즘의 종류인 선형 검색, 이진검색, 해쉬법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 13: 웹캐싱 기법</title>
      <link>http://jeha00.github.io/post/os/os_chapter_13_%EC%9B%B9%EC%BA%90%EC%8B%B1/</link>
      <pubDate>Tue, 31 May 2022 20:20:17 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_13_%EC%9B%B9%EC%BA%90%EC%8B%B1/</guid>
      <description>캐싱이란 무엇이고, 웹에서 사용되는 캐싱은 무엇을 목적으로 하는지, 웹캐싱이 전통적인 캐싱 기법과 무엇이 다른지, ICP는 무엇인지, 정적 웹과 동적 웹이란 무엇인지 등을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 12: 파일 시스템 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_12_%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_2/</link>
      <pubDate>Sun, 29 May 2022 18:16:18 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_12_%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_2/</guid>
      <description>Disk의 할당방식 3가지, FAT file system이란 무엇인지, disk의 빈 공간을 어떻게 관리하는지, page cache와 buffer cache와의 차이점과 마지막으로 통합 buffer cache에서의 Memory mapped 방식에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 12: 파일 시스템 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_12_%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_1/</link>
      <pubDate>Sun, 29 May 2022 18:08:02 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_12_%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_1/</guid>
      <description>file이란 무엇이고, 이 file 관리하는 system은 무엇인지, operation은 memory와 disk 사이에서 어떤 순서로 이뤄지는지,  file protection은 어떻게 이뤄지는지, 순차 접근과 직접 접근이 무엇인지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 11: 디스크 관리</title>
      <link>http://jeha00.github.io/post/os/os_chapter_11_%EB%94%94%EC%8A%A4%ED%81%AC%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Wed, 25 May 2022 13:37:20 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_11_%EB%94%94%EC%8A%A4%ED%81%AC%EA%B4%80%EB%A6%AC/</guid>
      <description>디스크의 물리적인 구조는 어떻고, 이 디스크 스케쥴링이 왜 필요하고 어떤 알고리즘들로 스케쥴링되는지, disk의 역할 2가지는 무엇인지, 다중 디스크 상황의 장점은 무엇인지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 10: 가상 메모리</title>
      <link>http://jeha00.github.io/post/os/os_chapter_10_%EA%B0%80%EC%83%81%EB%A9%94%EB%AA%A8%EB%A6%AC/</link>
      <pubDate>Mon, 23 May 2022 21:50:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_10_%EA%B0%80%EC%83%81%EB%A9%94%EB%AA%A8%EB%A6%AC/</guid>
      <description>가상 메모리를 관리하기 위한 방법으로 demanding paging에 대해 알아본다. 그리고, 페이지 교체는 어떠한 순서로 이뤄지는지, 프로세스에 프레임은 어떤 알고리즘을 통해서 할당되는지, 전역 교체와 지역교체는 무엇인지 마지막으로 thrashing 상황과 MPD 개념에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 09: 교착 상태</title>
      <link>http://jeha00.github.io/post/os/os_chapter_09_%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C/</link>
      <pubDate>Tue, 10 May 2022 20:38:17 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_09_%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C/</guid>
      <description>교착 상태(deadlock)이란 무엇이고, deadlock 발생 조건 4가지는 무엇이며, 이에 따라 deadlock 처리 방법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 08: 프로세스 동기화 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_2/</link>
      <pubDate>Tue, 10 May 2022 20:38:04 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_2/</guid>
      <description>프로세스 동기화의 전통적인 문제 3가지와 semaphore를 개선한 방법인 monitor에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 08: 프로세스 동기화 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_1/</link>
      <pubDate>Wed, 04 May 2022 20:53:38 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_08_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EB%8F%99%EA%B8%B0%ED%99%94_1/</guid>
      <description>Race condition이란 무엇이고, 이 race condition은 OS에서 언제 발생되며, 이를 해결하기 위한 방법으로 SW 방법과 SW 방법에는 무엇이 있는지를 배운다. 또한, Semaphore가 무엇인지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 07: 메모리 관리 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_2/</link>
      <pubDate>Thu, 28 Apr 2022 16:13:57 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_2/</guid>
      <description>불연속 할당 방법인 pagin 기법, segmentation 기법, paged segmentation 기법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 07: 메모리 관리 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_1/</link>
      <pubDate>Thu, 28 Apr 2022 16:13:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_07_%EB%A9%94%EB%AA%A8%EB%A6%AC%EA%B4%80%EB%A6%AC_1/</guid>
      <description>logical address와 physical address를 어떻게 mapping하는지, 메모리 관리와 관련된 용어 4가지에 대해 알아보고, 물리적 메모리의 할당 방식 연속할당과 불연속할당 방식 중 연속할당에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 06: CPU scheduling</title>
      <link>http://jeha00.github.io/post/os/os_chapter_06_cpu_scheduling/</link>
      <pubDate>Fri, 22 Apr 2022 18:50:51 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_06_cpu_scheduling/</guid>
      <description>Bound process를 중심으로 CPU 스케쥴러가 왜 필요한지, 스케쥴링의 성능 척도는 무엇인지, CPU sheduling 알고리즘의 종류에는 무엇이 있고, 이 알고리즘 평가는 어떻게 이뤄지는지 알아보자.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 05: 프로세스 관리</title>
      <link>http://jeha00.github.io/post/os/os_chapter_05_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Mon, 18 Apr 2022 23:25:25 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_05_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4_%EA%B4%80%EB%A6%AC/</guid>
      <description>프로세스란 무엇인지, 프로세스의 상태는 어떻게 흘러가는지, 문맥 교환이란 무엇인지, 프로세스가 어떻게 생성되고 종료되는지, 프로세스끼리 협력은 어떻게 하는지, thread는 무엇인지 알아보겠다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 04: 프로그램의 구조와 실행</title>
      <link>http://jeha00.github.io/post/os/os_chapter_04_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98%EA%B5%AC%EC%A1%B0%EC%99%80%EC%8B%A4%ED%96%89/</link>
      <pubDate>Fri, 15 Apr 2022 00:27:39 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_04_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98%EA%B5%AC%EC%A1%B0%EC%99%80%EC%8B%A4%ED%96%89/</guid>
      <description>프로그램의 구조와 실행에 대해 설명한다. 예를 들어 프로그램의 주소영역, PCB, Program counter, 일반 명령과 특권 명령, Virtual memory, kernel mode와 user mode 등등을 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 03: 컴퓨터 시스템의 동작원리 2</title>
      <link>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_2/</link>
      <pubDate>Thu, 14 Apr 2022 14:54:58 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_2/</guid>
      <description>입출력 구조, DMA, 저장장치의 구조 그리고 계층구조에 대해 알아본다. 또한, 하드웨어, 메모리, CPU의 각 보안 방법에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 03: 컴퓨터 시스템의 동작원리 1</title>
      <link>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_1/</link>
      <pubDate>Wed, 13 Apr 2022 13:55:26 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_03_%EC%BB%B4%ED%93%A8%ED%84%B0%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC_1/</guid>
      <description>I/O 연산이 무엇이고, controller와 local buffer가 무엇이고, 입출력 연산이 Interrupt를 중심으로 어떻게 진행되는지를 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] OS Chapter 02: Introduction to Operating System</title>
      <link>http://jeha00.github.io/post/os/os_chapter_02_%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C_%EA%B0%9C%EC%9A%94/</link>
      <pubDate>Tue, 05 Apr 2022 17:43:59 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/os/os_chapter_02_%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C_%EA%B0%9C%EC%9A%94/</guid>
      <description>운영체제란 무엇이고, 무슨 역할을 하는지, 어떻게 분류되는지, 그리고 CPU, 메모리, 입출력 장치의 대략적인 관리 mechanism에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>Dev-Contents</title>
      <link>http://jeha00.github.io/post/dev-contents/dev-contents/</link>
      <pubDate>Thu, 31 Mar 2022 22:09:06 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/dev-contents/dev-contents/</guid>
      <description>Updated on June 17   /  개발 관련 좋은 컨텐츠를 보관하고 섭취하기</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP Header 2</title>
      <link>http://jeha00.github.io/post/network/network_http_8/</link>
      <pubDate>Fri, 18 Mar 2022 21:51:01 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_8/</guid>
      <description>검증 헤더와 조건부 요청 헤더의 종류, 그중 캐시 관련 헤더에 대해서 알아본다. 그리고, 프록시 서버와 원(Origin) 서버의 차이와 캐시를 어떻게 무효화하는지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP Header 1</title>
      <link>http://jeha00.github.io/post/network/network_http_7/</link>
      <pubDate>Thu, 17 Mar 2022 20:17:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_7/</guid>
      <description>representation, 콘텐츠 협상, 전송 방식, 일반 정보, 특별 정보, 인증 그리고 쿠키에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP status</title>
      <link>http://jeha00.github.io/post/network/network_http_6/</link>
      <pubDate>Tue, 15 Mar 2022 10:14:50 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_6/</guid>
      <description>HTTP status 2xx, 3xx, 4xx, 5xx에 대해 각각 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP method use</title>
      <link>http://jeha00.github.io/post/network/network_http_5/</link>
      <pubDate>Mon, 14 Mar 2022 21:41:29 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_5/</guid>
      <description>HTTP method를 가지고 클라이언트가 서버에 어떻게 데이터를 전송하는지, 그리고 API 설계에는 무슨 종류가 있는지 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP method</title>
      <link>http://jeha00.github.io/post/network/network_http_4/</link>
      <pubDate>Thu, 10 Mar 2022 20:32:24 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_4/</guid>
      <description>HTTP method인 GET, POST, PUT, PATCH, DELETE 그리고 속성에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP basic</title>
      <link>http://jeha00.github.io/post/network/network_http_3/</link>
      <pubDate>Wed, 09 Mar 2022 17:56:30 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_3/</guid>
      <description>HTTP란 무엇이고, HTTP의 특징인 클라이언트 서버 구조, stateless, connectionless, HTTP mesage에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP intro. 2: URI 와 웹 브라우저 요청 흐름</title>
      <link>http://jeha00.github.io/post/network/network_http_2/</link>
      <pubDate>Tue, 08 Mar 2022 11:50:46 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_2/</guid>
      <description>URI, URL, URN 에 대해 알아보고, 웹 브라우저의 요청 흐름에 대해 알아본다.</description>
    </item>
    
    <item>
      <title>[TIL] Network HTTP intro. 1: Internet network</title>
      <link>http://jeha00.github.io/post/network/network_http_1/</link>
      <pubDate>Mon, 07 Mar 2022 21:16:44 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/network/network_http_1/</guid>
      <description>HTTP를 학습하기 위해 사전지식으로 IP,TCP/UDP, PORT, DNS를 알아본다.</description>
    </item>
    
    <item>
      <title>Window에서 Hugo로 Github page 만들고 배포하기</title>
      <link>http://jeha00.github.io/post/dev-contents/hugo%EB%A1%9C-github-page-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 17 Feb 2022 21:49:13 +0900</pubDate>
      
      <guid>http://jeha00.github.io/post/dev-contents/hugo%EB%A1%9C-github-page-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/</guid>
      <description>SSG의 한 종류 &amp;lsquo;Hugo&amp;rsquo;와 &amp;lsquo;git remote, git submodule&amp;rsquo;로 Github page를 만든다. 그 후, 컨텐츠 생성과 업로드를 한다. 마지막으로 utterances로 댓글 기능 추가, deploy.sh를 사용하여 업로드하는 방법을 다룬다.</description>
    </item>
    
    
    
  </channel>
</rss>
